[
    {
        "question": "what is the attitude of the first dog and the german shepherds?",
        "qid": "4300459012000_grailqa",
        "source": "grailqa",
        "entities": {
            "first dog": "m.05t073s",
            "german shepherds": "m.0km5c"
        },
        "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.05t073s)) (JOIN (R biology.animal_breed.temperament) m.0km5c)))",
        "actions": [
            "get_relations(m.05t073s)",
            "get_neighbors(m.05t073s,biology.pedigreed_animal.breed)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.0km5c)",
            "get_neighbors(m.0km5c,biology.animal_breed.temperament)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kqpjd",
                "entity_name": "Obedient"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kpkld",
                "entity_name": "Intelligent"
            }
        ]
    },
    {
        "question": "When was the last superbowl to inlucde the team that had Rise as thier mascot?",
        "qid": "WebQTest-595_5dd0eeca79ae03b7711252c032849eb2_cwq",
        "source": "cwq",
        "entities": {
            "superbowl": "m.06x5s",
            "Rise": "m.0nz45zc"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0nz45zc)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.0nz45zc)",
            "get_neighbors(m.0nz45zc,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVII"
            }
        ]
    },
    {
        "question": "Which form of government was practiced within Sparta and within the countries ruled by Philip III of Spain?",
        "qid": "WebQTrn-73_12781e726ed82c2dac09fcd2dce236fb_cwq",
        "source": "cwq",
        "entities": {
            "Sparta": "m.09472",
            "Philip III of Spain": "m.012rkn"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN royalty.kingdom.rulers m.012rkn)))",
        "actions": [
            "get_relations(m.09472)",
            "get_neighbors(m.09472,location.country.form_of_government)",
            "get_relations(m.012rkn)",
            "get_neighbors(m.012rkn,royalty.monarch.kingdom)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.04szc",
                "answer_type": "Entity",
                "entity_name": "Monarchy"
            }
        ]
    },
    {
        "question": "what type of menstrual cramps treatments have sludge syndrome side effects?",
        "qid": "4301182007000_grailqa",
        "source": "grailqa",
        "entities": {
            "menstrual cramps": "m.0255t_",
            "SLUDGE syndrome": "m.025yc7f"
        },
        "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.0255t_)))",
        "actions": [
            "get_relations(m.025yc7f)",
            "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.symptom.side_effect_of)",
            "get_relations(m.0255t_)",
            "get_neighbors(m.0255t_,medicine.disease.treatments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.014d3g",
                "entity_name": "Ibuprofen"
            }
        ]
    },
    {
        "question": "how many different religious texts have oriental orthodox and hidden christians of japan texts?",
        "qid": "3206221004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hidden Christians of Japan": "m.044f0r",
            "oriental orthodox": "m.05pbd"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.044f0r) (JOIN (R religion.religion.texts) m.05pbd))))",
        "actions": [
            "get_relations(m.044f0r)",
            "get_neighbors(m.044f0r,religion.religion.texts)",
            "get_relations(m.05pbd)",
            "get_neighbors(m.05pbd,religion.religion.texts)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many camera iso capabilities are the iso setting used by kodak z712 is zoom digital camera and samsung s1050?",
        "qid": "3205827000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kodak Z712 IS ZOOM digital camera": "m.03hpfyz",
            "Samsung S1050": "m.03q2r11"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03hpfyz) (JOIN (R digicams.digital_camera.iso_setting) m.03q2r11))))",
        "actions": [
            "get_relations(m.03hpfyz)",
            "get_neighbors(m.03hpfyz,digicams.digital_camera.iso_setting)",
            "get_relations(m.03q2r11)",
            "get_neighbors(m.03q2r11,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "7"
            }
        ]
    },
    {
        "question": "which types of storage are compatible with casio exilim ex-v8 as well as color filter array of bayer?",
        "qid": "4302099013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Casio Exilim EX-V8": "m.03q2ljb",
            "bayer": "m.02r8js"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2ljb) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
        "actions": [
            "get_relations(m.03q2ljb)",
            "get_neighbors(m.03q2ljb,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0220vm1",
                "entity_name": "SDHC Card"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z76m",
                "entity_name": "MultiMediaCard"
            }
        ]
    },
    {
        "question": "What is the ocean that the water flowing underneath the Bethanga Bridge empties into?",
        "qid": "WebQTrn-1234_7051979c1a99a094b204a20afe3b82ec_cwq",
        "source": "cwq",
        "entities": {
            "Ocean": "m.05kq4",
            "Bethanga Bridge": "m.010hrn7g"
        },
        "s_expression": "(AND (JOIN (R geography.river.mouth) (JOIN geography.body_of_water.bridges m.010hrn7g)) (JOIN geography.geographical_feature.category m.05kq4))",
        "actions": [
            "get_relations(m.010hrn7g)",
            "get_neighbors(m.010hrn7g,transportation.bridge.body_of_water_spanned)",
            "get_relations(#0)",
            "get_neighbors(#0,geography.river.mouth)",
            "get_relations(m.05kq4)",
            "get_neighbors(m.05kq4,geography.geographical_feature_category.features)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.06nqw",
                "answer_type": "Entity",
                "entity_name": "Southern Ocean"
            }
        ]
    },
    {
        "question": "a camera with a bayer and iso setting of 800 has what type of sensor type?",
        "qid": "4300861003000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "800": "m.01xrg58"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.01xrg58))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.01xrg58)",
            "get_neighbors(m.01xrg58,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            }
        ]
    },
    {
        "question": "What was the earliest event that George W. Bush was sworn in at?",
        "qid": "WebQTrn-923_c0b877813c04f2a410d526fdd6acbaed_cwq",
        "source": "cwq",
        "entities": {
            "United States presidential inauguration": "m.03bxbl6",
            "George W. Bush": "m.09b6zr"
        },
        "s_expression": "(ARGMIN (AND (JOIN (R time.recurring_event.instances) m.03bxbl6) (JOIN base.inaugurations.inauguration.president m.09b6zr)) time.event.end_date)",
        "actions": [
            "get_relations(m.03bxbl6)",
            "get_neighbors(m.03bxbl6,time.recurring_event.instances)",
            "get_relations(m.09b6zr)",
            "get_neighbors(m.09b6zr,base.inaugurations.inauguration_speaker.inauguration)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmin(#2,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.05bryps",
                "answer_type": "Entity",
                "entity_name": "George W. Bush 2001 presidential inauguration"
            }
        ]
    },
    {
        "question": "what rocket engine designer designs a bipropellant rocket engine with rp-1 and gas-generator cycle?",
        "qid": "4300753003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Gas-generator cycle": "m.04qqvv",
            "RP-1": "m.021vvd"
        },
        "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqvv) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.021vvd))))",
        "actions": [
            "get_relations(m.04qqvv)",
            "get_neighbors(m.04qqvv,spaceflight.rocket_engine_cycle.rocket_engines)",
            "get_relations(m.021vvd)",
            "get_neighbors(m.021vvd,spaceflight.rocket_engine_fuel.rocket_engines)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fkyw",
                "entity_name": "SpaceX"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vhl6",
                "entity_name": "Rocketdyne"
            }
        ]
    },
    {
        "question": "how much content about technology is produced by the person that produces let the good times roll?",
        "qid": "4303008011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Technology": "m.07c1v",
            "Let the Good Times Roll": "m.05v8gm9"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.07c1v) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.05v8gm9)))))",
        "actions": [
            "get_relations(m.07c1v)",
            "get_neighbors(m.07c1v,broadcast.genre.content)",
            "get_relations(m.05v8gm9)",
            "get_neighbors(m.05v8gm9,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what website, using really simple syndication as api, has the category of jovem nerd?",
        "qid": "4300801015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Jovem Nerd": "m.0ywgx93",
            "really simple syndication": "m.0n5tx"
        },
        "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.0ywgx93)) (JOIN internet.website.api m.0n5tx)))",
        "actions": [
            "get_relations(m.0ywgx93)",
            "get_neighbors(m.0ywgx93,internet.website.category)",
            "get_relations(#0)",
            "get_neighbors(#0,internet.website_category.sites)",
            "get_relations(m.0n5tx)",
            "get_neighbors(m.0n5tx,internet.api.site)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mzwd",
                "entity_name": "LiveJournal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kdzwd",
                "entity_name": "High level bits"
            }
        ]
    },
    {
        "question": "What standard time zone is used in Michigan and locations near Venice Municipal Airport?",
        "qid": "WebQTest-1264_623b8370871966e2e8aeb301482e1558_cwq",
        "source": "cwq",
        "entities": {
            "Michigan": "m.04rrx",
            "Venice Municipal Airport": "m.026w2y7"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.04rrx) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.026w2y7)))",
        "actions": [
            "get_relations(m.04rrx)",
            "get_neighbors(m.04rrx,location.location.time_zones)",
            "get_relations(m.026w2y7)",
            "get_neighbors(m.026w2y7,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ]
    },
    {
        "question": "what is the isos that kodak easyshare m753 by canon, inc. supports?",
        "qid": "4304013002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kodak EasyShare M753": "m.04wk7k7",
            "canon, inc.": "m.01bvx1"
        },
        "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.04wk7k7) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.01bvx1))))",
        "actions": [
            "get_relations(m.04wk7k7)",
            "get_neighbors(m.04wk7k7,digicams.digital_camera.iso_setting)",
            "get_relations(m.01bvx1)",
            "get_neighbors(m.01bvx1,digicams.camera_sensor_manufacturer.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.iso_setting)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_x",
                "entity_name": "100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_7",
                "entity_name": "Auto"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_g",
                "entity_name": "400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_p",
                "entity_name": "200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg58",
                "entity_name": "800"
            }
        ]
    },
    {
        "question": "what type of viewfinder is uses a unknown sensor and uses a jpeg (exif 2.2) format?",
        "qid": "4302274012000_grailqa",
        "source": "grailqa",
        "entities": {
            "JPEG (EXIF 2.2)": "m.03q44xr",
            "Unknown": "m.01xrf_0"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.03q44xr) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.01xrf_0))))",
        "actions": [
            "get_relations(m.03q44xr)",
            "get_neighbors(m.03q44xr,digicams.camera_compressed_format.cameras)",
            "get_relations(m.01xrf_0)",
            "get_neighbors(m.01xrf_0,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg6z",
                "entity_name": "TTL"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg1f",
                "entity_name": "Optical"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0220vpb",
                "entity_name": "Electronic"
            }
        ]
    },
    {
        "question": "what is the name of the position that stephen wilson played in which the player who authored did you see that thing? that\u2019s sidat-singh! the syracuse walking dream! also play?",
        "qid": "4300563007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Did you see that thing? That\u2019s Sidat-Singh! The Syracuse Walking Dream!": "m.09rl290",
            "Stephen Wilson": "m.0w4pvjj"
        },
        "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.09rl290)) (JOIN basketball.basketball_position.players m.0w4pvjj)))",
        "actions": [
            "get_relations(m.09rl290)",
            "get_neighbors(m.09rl290,media_common.quotation.author)",
            "get_relations(#0)",
            "get_neighbors(#0,basketball.basketball_player.position_s)",
            "get_relations(m.0w4pvjj)",
            "get_neighbors(m.0w4pvjj,basketball.basketball_player.position_s)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ch8k4",
                "entity_name": "Guard"
            }
        ]
    },
    {
        "question": "The team that won the 1969 World Series championship won the World Series last when?",
        "qid": "WebQTest-1556_d47235946e6c9112db92fd6fbb6e26b3_cwq",
        "source": "cwq",
        "entities": {
            "1969 World Series": "m.04jg9_"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04jg9_)) time.event.end_date)",
        "actions": [
            "get_relations(m.04jg9_)",
            "get_neighbors(m.04jg9_,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q9lc",
                "answer_type": "Entity",
                "entity_name": "1986 World Series"
            }
        ]
    },
    {
        "question": "the harrier and chinese crested dog dog breeds share how many temperaments?",
        "qid": "3205485002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Harrier": "m.0fsg8",
            "Chinese Crested Dog": "m.01f57_"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.0fsg8) (JOIN (R biology.animal_breed.temperament) m.01f57_))))",
        "actions": [
            "get_relations(m.0fsg8)",
            "get_neighbors(m.0fsg8,biology.animal_breed.temperament)",
            "get_relations(m.01f57_)",
            "get_neighbors(m.01f57_,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what regions sell vc nintendo games?",
        "qid": "498000101_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Nintendo": "m.059wk",
            "vc": "m.07sg3j"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
        "actions": [
            "get_relations(m.059wk)",
            "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
            "get_relations(m.07sg3j)",
            "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02j9z",
                "entity_name": "Europe"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_3d",
                "entity_name": "Japan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059g4",
                "entity_name": "North America"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0chghy",
                "entity_name": "Australia"
            }
        ]
    },
    {
        "question": "hazelwood west high school and the publisher of folia fall under which category of schools?",
        "qid": "4301751011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Folia": "m.03p0sq7",
            "Hazelwood West High School": "m.08w6sy"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.03p0sq7)) (JOIN (R education.educational_institution.school_type) m.08w6sy)))",
        "actions": [
            "get_relations(m.03p0sq7)",
            "get_neighbors(m.03p0sq7,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.08w6sy)",
            "get_neighbors(m.08w6sy,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fjrb",
                "entity_name": "Public school"
            }
        ]
    },
    {
        "question": "the character that resides in the palaces of sacred band of stepsons is named what?",
        "qid": "4300742011000_grailqa",
        "source": "grailqa",
        "entities": {
            "palaces": "m.05zp8",
            "Sacred Band of Stepsons": "m.0b_wsry"
        },
        "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.05zp8) (JOIN (R fictional_universe.fictional_universe.locations) m.0b_wsry))))",
        "actions": [
            "get_relations(m.05zp8)",
            "get_neighbors(m.05zp8,fictional_universe.type_of_fictional_setting.settings)",
            "get_relations(m.0b_wsry)",
            "get_neighbors(m.0b_wsry,fictional_universe.fictional_universe.locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0b19n",
                "entity_name": "Cime"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll9p",
                "entity_name": "Faun"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c1dhy_",
                "entity_name": "Faun, Shepherd of Sandia"
            }
        ]
    },
    {
        "question": "Where is the greatest population in the country where the Domari is spoken?",
        "qid": "WebQTrn-3037_602d3e74c7063895f149a8f44b9e406f_cwq",
        "source": "cwq",
        "entities": {
            "domari": "m.0c4chg"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.languages_spoken m.0c4chg)) topic_server.population_number)",
        "actions": [
            "get_relations(m.0c4chg)",
            "get_neighbors(m.0c4chg,language.human_language.countries_spoken_in)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "What Canadian government exists where Baldur von Schirach was born?",
        "qid": "WebQTrn-1702_3f76d491e90682cc29e3de2546e1f9c5_cwq",
        "source": "cwq",
        "entities": {
            "canadian": "m.0d060g",
            "Baldur von Schirach": "m.0143sn"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0d060g) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
        "actions": [
            "get_relations(m.0d060g)",
            "get_neighbors(m.0d060g,location.country.form_of_government)",
            "get_relations(m.0143sn)",
            "get_neighbors(m.0143sn,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "for the casinos owned by the same person as bellagio, which one is the smallest?",
        "qid": "496000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Bellagio": "m.033bxs"
        },
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "actions": [
            "get_relations(m.033bxs)",
            "get_neighbors(m.033bxs,base.casinos.casino.owner)",
            "get_relations(#0)",
            "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
            "get_attributes(#1)",
            "argmin(#1,base.casinos.casino.rooms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "question": "The artist who had a concert tour named I'm Your Baby Tonight World Tour died from what drugs?",
        "qid": "WebQTrn-2600_498797c759f6119ac48af1f70b11e2c1_cwq",
        "source": "cwq",
        "entities": {
            "Drug overdose": "m.01tf_6",
            "I'm Your Baby Tonight World Tour": "m.047bc2r"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.047bc2r)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
        "actions": [
            "get_relations(m.047bc2r)",
            "get_neighbors(m.047bc2r,music.concert_tour.artist)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.01tf_6)",
            "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02nx6jb",
                "answer_type": "Entity",
                "entity_name": "Cocaine overdose"
            }
        ]
    },
    {
        "question": "which musical release is produced by it can happen and labelled warner bros records?",
        "qid": "4301990005000_grailqa",
        "source": "grailqa",
        "entities": {
            "It Can Happen": "m.0ph2bx",
            "warner bros records": "m.03rhqg"
        },
        "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0ph2bx)) (JOIN music.release.label m.03rhqg)))",
        "actions": [
            "get_relations(m.0ph2bx)",
            "get_neighbors(m.0ph2bx,music.recording.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,music.producer.releases_produced)",
            "get_relations(m.03rhqg)",
            "get_neighbors(m.03rhqg,music.record_label.releases)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0393p0f",
                "entity_name": "Human Being"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bkpjp",
                "entity_name": "Seal"
            }
        ]
    },
    {
        "question": "what number of contents about classical music are produced by the same producer as radio lab?",
        "qid": "4303008005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Classical music": "m.0ggq0m",
            "radio lab": "m.02rpln2"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.0ggq0m) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.02rpln2)))))",
        "actions": [
            "get_relations(m.0ggq0m)",
            "get_neighbors(m.0ggq0m,broadcast.genre.content)",
            "get_relations(m.02rpln2)",
            "get_neighbors(m.02rpln2,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what kind of government does japan have now and in locations where Emanuel Lasker was born in?",
        "qid": "WebQTest-738_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Japan": "m.03_3d",
            "Emanuel Lasker": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.03_3d)",
            "get_neighbors(m.03_3d,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "which was the most recently formed cyclone that is in the same category as tropical storm rachel?",
        "qid": "4303808000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tropical Storm Rachel": "m.0crbvqz"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0crbvqz))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.0crbvqz)",
            "get_neighbors(m.0crbvqz,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011jnng3",
                "entity_name": "Hurricane Iselle"
            }
        ]
    },
    {
        "question": "Which World series was the last one to be won by the team that had Crazy Crab as the mascot?",
        "qid": "WebQTest-832_e3d40457273785e46c5b71732713a5f4_cwq",
        "source": "cwq",
        "entities": {
            "Crazy Crab": "m.02q_hzh"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.02q_hzh)) time.event.start_date)",
        "actions": [
            "get_relations(m.02q_hzh)",
            "get_neighbors(m.02q_hzh,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0117q3yz"
            }
        ]
    },
    {
        "question": "what is the number of religious practices that practices tibetan buddhism and taoism?",
        "qid": "3204573000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tibetan Buddhism": "m.07mc4",
            "Taoism": "m.07gvx"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.07mc4) (JOIN (R religion.religion.practices) m.07gvx))))",
        "actions": [
            "get_relations(m.07mc4)",
            "get_neighbors(m.07mc4,religion.religion.practices)",
            "get_relations(m.07gvx)",
            "get_neighbors(m.07gvx,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "What's the home stadium of the team that won the 2014 AFC Championship Game?",
        "qid": "WebQTrn-2684_9635bb1f7252e813d1dfe70f82d62cad_cwq",
        "source": "cwq",
        "entities": {
            "2014 AFC Championship Game": "m.0_gtzbl"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.0_gtzbl)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.0_gtzbl)",
            "get_neighbors(m.0_gtzbl,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hxv8",
                "answer_type": "Entity",
                "entity_name": "Sports Authority Field at Mile High"
            }
        ]
    },
    {
        "question": "npr news and the producer of the world produce what content?",
        "qid": "4300832010000_grailqa",
        "source": "grailqa",
        "entities": {
            "The World": "m.068xhb",
            "npr news": "m.0c0sl"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.068xhb)) (JOIN broadcast.content.producer m.0c0sl)))",
        "actions": [
            "get_relations(m.068xhb)",
            "get_neighbors(m.068xhb,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.0c0sl)",
            "get_neighbors(m.0c0sl,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d7q1y",
                "entity_name": "PRI's The World - Geo Quiz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bv0hk",
                "entity_name": "PRI: Selected Shorts"
            }
        ]
    },
    {
        "question": "how many electronic arts games are available for purchase in the united states?",
        "qid": "444000202_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "united states": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "what is the number of religious texts that include both buddhists and buddhism texts?",
        "qid": "3206221006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Buddhism": "m.092bf5",
            "buddhists": "m.01c2mz"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.092bf5) (JOIN (R religion.religion.texts) m.01c2mz))))",
        "actions": [
            "get_relations(m.092bf5)",
            "get_neighbors(m.092bf5,religion.religion.texts)",
            "get_relations(m.01c2mz)",
            "get_neighbors(m.01c2mz,religion.religion.texts)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many contents about radio documentary were produced by the producer of small things considered?",
        "qid": "4303008000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Radio documentary": "m.03hxd3",
            "Small Things Considered": "m.05v2fbl"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.03hxd3) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.05v2fbl)))))",
        "actions": [
            "get_relations(m.03hxd3)",
            "get_neighbors(m.03hxd3,broadcast.genre.content)",
            "get_relations(m.05v2fbl)",
            "get_neighbors(m.05v2fbl,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "which medications to treat pains have sludge syndrome as a side effect?",
        "qid": "4301182004000_grailqa",
        "source": "grailqa",
        "entities": {
            "pains": "m.062t2",
            "SLUDGE syndrome": "m.025yc7f"
        },
        "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.062t2)))",
        "actions": [
            "get_relations(m.025yc7f)",
            "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.symptom.side_effect_of)",
            "get_relations(m.062t2)",
            "get_neighbors(m.062t2,medicine.disease.treatments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03brks",
                "entity_name": "Buprenorphine"
            }
        ]
    },
    {
        "question": "What is the name of the student that is credited with creating Google?",
        "qid": "WebQTrn-2393_562282f8faca4648a9c8ec98e3e4415d_cwq",
        "source": "cwq",
        "entities": {
            "google": "m.0387r",
            "Student": "m.014cnc"
        },
        "s_expression": "(AND (JOIN (R law.invention.inventor) m.0387r) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.014cnc)))",
        "actions": [
            "get_relations(m.0387r)",
            "get_neighbors(m.0387r,law.invention.inventor)",
            "get_relations(m.014cnc)",
            "get_neighbors(m.014cnc,people.profession.people_with_this_profession)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0gjpq",
                "answer_type": "Entity",
                "entity_name": "Larry Page"
            }
        ]
    },
    {
        "question": "what diseases transmitted via sex have the same type of infectious agent as tb?",
        "qid": "481000301_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Sex": "m.06ng1",
            "tb": "m.07jwr"
        },
        "s_expression": "(AND medicine.infectious_disease (AND (JOIN (R medicine.transmission_route.infections_that_travel_this_way) m.06ng1) (JOIN medicine.infectious_disease.infectious_agent_type (JOIN medicine.type_of_infectious_agent.diseases m.07jwr))))",
        "actions": [
            "get_relations(m.06ng1)",
            "get_neighbors(m.06ng1,medicine.transmission_route.infections_that_travel_this_way)",
            "get_relations(m.07jwr)",
            "get_neighbors(m.07jwr,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "question": "which character with an item destroyed by tempus had powers which included control bodies of others?",
        "qid": "4302209010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tempus": "m.0bxj80p",
            "Control bodies of others": "m.0c82m0y"
        },
        "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxj80p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c82m0y)))",
        "actions": [
            "get_relations(m.0bxj80p)",
            "get_neighbors(m.0bxj80p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
            "get_relations(#0)",
            "get_neighbors(#0,fictional_universe.fictional_object.owner)",
            "get_relations(m.0c82m0y)",
            "get_neighbors(m.0c82m0y,fictional_universe.character_powers.characters_with_this_ability)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxtt5p",
                "entity_name": "Askelon of Meridian"
            }
        ]
    },
    {
        "question": "What are things to see in downtown Chicago with an image of the skyline?",
        "qid": "WebQTrn-825_20030c80de39b4c9d510ac6a48eaf840_cwq",
        "source": "cwq",
        "entities": {
            "Skyline of City of Chicago": "m.03sd6x6"
        },
        "s_expression": "(JOIN (R travel.travel_destination.tourist_attractions) (AND (JOIN (R location.location.containedby) common.topic) (JOIN common.topic.image m.03sd6x6)))",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,location.location.containedby)",
            "get_relations(m.03sd6x6)",
            "get_neighbors(m.03sd6x6,common.image.appears_in_topic_gallery)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,travel.travel_destination.tourist_attractions)"
        ],
        "answer": [
            {
                "answer_argument": "m.01dlzc",
                "answer_type": "Entity",
                "entity_name": "Adler Planetarium"
            },
            {
                "answer_argument": "m.021czc",
                "answer_type": "Entity",
                "entity_name": "Field Museum of Natural History"
            },
            {
                "answer_argument": "m.025v4fb",
                "answer_type": "Entity",
                "entity_name": "Lincoln Park Zoo"
            },
            {
                "answer_argument": "m.027hqc_",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago"
            },
            {
                "answer_argument": "m.02jw0z",
                "answer_type": "Entity",
                "entity_name": "Shedd Aquarium"
            },
            {
                "answer_argument": "m.02rvwrv",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago Building"
            },
            {
                "answer_argument": "m.05zv09",
                "answer_type": "Entity",
                "entity_name": "Chicago Cultural Center"
            },
            {
                "answer_argument": "m.06_7k",
                "answer_type": "Entity",
                "entity_name": "Willis Tower"
            },
            {
                "answer_argument": "m.0b0sh",
                "answer_type": "Entity",
                "entity_name": "Wrigley Field"
            },
            {
                "answer_argument": "m.0b28z",
                "answer_type": "Entity",
                "entity_name": "John Hancock Center"
            },
            {
                "answer_argument": "m.0bl8mx",
                "answer_type": "Entity",
                "entity_name": "DuSable Museum of African American History"
            },
            {
                "answer_argument": "m.0c7ln",
                "answer_type": "Entity",
                "entity_name": "Navy Pier"
            },
            {
                "answer_argument": "m.0d9wz",
                "answer_type": "Entity",
                "entity_name": "Museum of Science and Industry"
            },
            {
                "answer_argument": "m.0g_8d0",
                "answer_type": "Entity",
                "entity_name": "Cadillac Palace Theatre"
            },
            {
                "answer_argument": "m.0w7m2x9",
                "answer_type": "Entity",
                "entity_name": "Muslim Community Center"
            }
        ]
    },
    {
        "question": "how many religious practices are there that practices jainism and krishna?",
        "qid": "3204573002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Jainism": "m.042s9",
            "krishna": "m.017j3y"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.042s9) (JOIN (R religion.religion.practices) m.017j3y))))",
        "actions": [
            "get_relations(m.042s9)",
            "get_neighbors(m.042s9,religion.religion.practices)",
            "get_relations(m.017j3y)",
            "get_neighbors(m.017j3y,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "mormonites and eastern christians are practiced by how many religious practices?",
        "qid": "3204573013000_grailqa",
        "source": "grailqa",
        "entities": {
            "mormonites": "m.058x5",
            "eastern christians": "m.0blk0"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.058x5) (JOIN (R religion.religion.practices) m.0blk0))))",
        "actions": [
            "get_relations(m.058x5)",
            "get_neighbors(m.058x5,religion.religion.practices)",
            "get_relations(m.0blk0)",
            "get_neighbors(m.0blk0,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "name all types of museums that are of the same type as independence seaport museum and erie maritime museum.",
        "qid": "5400031000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Independence Seaport Museum": "m.02qk116",
            "Erie Maritime Museum": "m.08x7h8"
        },
        "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.02qk116) (JOIN architecture.type_of_museum.museums m.08x7h8)))))",
        "actions": [
            "get_relations(m.02qk116)",
            "get_neighbors(m.02qk116,architecture.museum.type_of_museum)",
            "get_relations(m.08x7h8)",
            "get_neighbors(m.08x7h8,architecture.museum.type_of_museum)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,architecture.type_of_museum.museums)",
            "get_relations(#3)",
            "get_neighbors(#3,architecture.museum.type_of_museum)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j58y",
                "entity_name": "Science museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgh_k",
                "entity_name": "History museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t372",
                "entity_name": "Natural History Museum, London"
            }
        ]
    },
    {
        "question": "in abrahamic faith, who is the founding figure of feast of assumption?",
        "qid": "4302278015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Feast of Assumption": "m.0_mrbts",
            "abrahamic faith": "m.0f_h6"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0_mrbts) (JOIN religion.religion.is_part_of m.0f_h6))))",
        "actions": [
            "get_relations(m.0_mrbts)",
            "get_neighbors(m.0_mrbts,time.holiday.featured_in_religions)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            }
        ]
    },
    {
        "question": "when did the colts last win the superbowl",
        "qid": "WebQTrn-1771_webqsp",
        "source": "webqsp",
        "entities": {
            "colts": "m.03wnh",
            "superbowl": "m.06x5s"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.03wnh) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.03wnh)",
            "get_neighbors(m.03wnh,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04k5qm",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLI"
            }
        ]
    },
    {
        "question": "the religion featuring christmas day, which is part of abrahamic faiths, has a founding leader who is named what?",
        "qid": "4302278011000_grailqa",
        "source": "grailqa",
        "entities": {
            "christmas day": "m.01vq3",
            "abrahamic faiths": "m.0f_h6"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.01vq3) (JOIN religion.religion.is_part_of m.0f_h6))))",
        "actions": [
            "get_relations(m.01vq3)",
            "get_neighbors(m.01vq3,time.holiday.featured_in_religions)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            }
        ]
    },
    {
        "question": "what is the farthest variable stars?",
        "qid": "4303393000000_grailqa",
        "source": "grailqa",
        "entities": {
            "variable stars": "m.0gzxf"
        },
        "s_expression": "(ARGMAX (AND astronomy.celestial_object (JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategories) m.0gzxf))) astronomy.celestial_object.cosmological_distance)",
        "actions": [
            "get_relations(m.0gzxf)",
            "get_neighbors(m.0gzxf,astronomy.celestial_object_category.subcategories)",
            "get_relations(#0)",
            "get_neighbors(#0,astronomy.celestial_object_category.objects)",
            "get_attributes(#1)",
            "argmax(#1,astronomy.celestial_object.cosmological_distance)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l1js",
                "entity_name": "Proxima Centauri"
            }
        ]
    },
    {
        "question": "what kind of viewfinder does the matsushita electric industrial's camera with a sensor that compresses image files into mts use?",
        "qid": "4302274007000_grailqa",
        "source": "grailqa",
        "entities": {
            "mts": "m.042zv3q",
            "matsushita electric industrial": "m.0nk5b"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.042zv3q) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.0nk5b))))",
        "actions": [
            "get_relations(m.042zv3q)",
            "get_neighbors(m.042zv3q,digicams.camera_compressed_format.cameras)",
            "get_relations(m.0nk5b)",
            "get_neighbors(m.0nk5b,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.026krtn",
                "entity_name": "Live preview"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.036132",
                "entity_name": "Electronic viewfinder"
            }
        ]
    },
    {
        "question": "What city do a majority of the people who live  in the location that contains Gebel Elba reside?",
        "qid": "WebQTrn-3037_8b3815ec57389b13892dd5abb108cc4e_cwq",
        "source": "cwq",
        "entities": {
            "Gebel Elba": "m.026cy73"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.location.partially_contains m.026cy73)) topic_server.population_number)",
        "actions": [
            "get_relations(m.026cy73)",
            "get_neighbors(m.026cy73,location.location.partially_containedby)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "Who was the Vice President of the man about whom \"Gore Vidal's Lincoln\" was written?",
        "qid": "WebQTrn-1777_5096e7f87655bfead420edf88c0629f0_cwq",
        "source": "cwq",
        "entities": {
            "Gore Vidal's Lincoln": "m.04j21rb"
        },
        "s_expression": "(ARGMAX (JOIN (R government.us_president.vice_president) (JOIN film.film_subject.films m.04j21rb)) government.us_vice_president.vice_president_number)",
        "actions": [
            "get_relations(m.04j21rb)",
            "get_neighbors(m.04j21rb,film.film.subjects)",
            "get_relations(#0)",
            "get_neighbors(#0,government.us_president.vice_president)",
            "get_attributes(#1)",
            "argmax(#1,government.us_vice_president.vice_president_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.0rmg",
                "answer_type": "Entity",
                "entity_name": "Andrew Johnson"
            }
        ]
    },
    {
        "question": "how many active websites are owned by monsoon multimedia?",
        "qid": "3206340012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "Monsoon Multimedia": "m.02v_qm2"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.02v_qm2))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.02v_qm2)",
            "get_neighbors(m.02v_qm2,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "When is the last time that the champion of the 1956 Peque\u00c3\u00b1a Copa del Mundo de Clubes win the champions league?",
        "qid": "WebQTrn-1606_d67df69c150ced0428b3bfedaa731cf9_cwq",
        "source": "cwq",
        "entities": {
            "UEFA Champions League Final": "m.05nblxt",
            "1956 peque\u00e3\u00b1a copa del mundo de clubes": "m.011q6011"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.011q6011)) (JOIN sports.sports_championship_event.championship m.05nblxt)) time.event.end_date)",
        "actions": [
            "get_relations(m.011q6011)",
            "get_neighbors(m.011q6011,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.05nblxt)",
            "get_neighbors(m.05nblxt,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0gytd9j",
                "answer_type": "Entity",
                "entity_name": "2014 UEFA Champions League Final"
            }
        ]
    },
    {
        "question": "What film in the same genre as The True Story of The Three Little Pigs starred Adam Sandler?",
        "qid": "WebQTrn-1677_4c971bef32fb5777fb8b18ead5a702fe_cwq",
        "source": "cwq",
        "entities": {
            "Adam Sandler": "m.0pz91",
            "The True Story of the Three Little Pigs": "g.11b5lzm6b0"
        },
        "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN film.film_genre.films_in_this_genre g.11b5lzm6b0)))",
        "actions": [
            "get_relations(m.0pz91)",
            "get_neighbors(m.0pz91,film.producer.film)",
            "get_relations(g.11b5lzm6b0)",
            "get_neighbors(g.11b5lzm6b0,film.film.genre)",
            "get_relations(#1)",
            "get_neighbors(#1,film.film_genre.films_in_this_genre)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.010rdrd1"
            },
            {
                "answer_argument": "m.02m7tn"
            }
        ]
    },
    {
        "question": "electronic arts has how many games found in the united states?",
        "qid": "444000002_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "united states": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "resurrection high school and the publisher of cairn magazine fall under which category of schools?",
        "qid": "4301751001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Cairn Magazine": "m.010pldkg",
            "Resurrection High School": "m.02r89nh"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.010pldkg)) (JOIN (R education.educational_institution.school_type) m.02r89nh)))",
        "actions": [
            "get_relations(m.010pldkg)",
            "get_neighbors(m.010pldkg,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.02r89nh)",
            "get_neighbors(m.02r89nh,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rs41",
                "entity_name": "Private school"
            }
        ]
    },
    {
        "question": "what type of dish contains crawfish tails and is common in louisiana creole cuisine?",
        "qid": "4301356011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Crawfish tails": "m.07706lz",
            "Louisiana Creole cuisine": "m.016w_c"
        },
        "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.07706lz) (JOIN (R dining.cuisine.dishes) m.016w_c))))",
        "actions": [
            "get_relations(m.07706lz)",
            "get_neighbors(m.07706lz,food.ingredient.dishes)",
            "get_relations(m.016w_c)",
            "get_neighbors(m.016w_c,dining.cuisine.dishes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,food.dish.type_of_dish1)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z1m1x",
                "entity_name": "Soup"
            }
        ]
    },
    {
        "question": "the plymouth caravelle and \u0161koda 110 r are in which class of automobiles?",
        "qid": "4301079001000_grailqa",
        "source": "grailqa",
        "entities": {
            "\u0160koda 110 R": "m.026ksp4",
            "Plymouth Caravelle": "m.03jbwv"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.026ksp4)) (JOIN automotive.automotive_class.examples m.03jbwv)))",
        "actions": [
            "get_relations(m.026ksp4)",
            "get_neighbors(m.026ksp4,automotive.model.predecessor)",
            "get_relations(#0)",
            "get_neighbors(#0,automotive.model.automotive_class)",
            "get_relations(m.03jbwv)",
            "get_neighbors(m.03jbwv,automotive.model.automotive_class)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d1dj",
                "entity_name": "Coup\u00e9"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021mp2",
                "entity_name": "Sedan"
            }
        ]
    },
    {
        "question": "what is the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 120?",
        "qid": "4300861022000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "120": "m.04pf295"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.04pf295))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.04pf295)",
            "get_neighbors(m.04pf295,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            }
        ]
    },
    {
        "question": "what are the diseases transmitted through sex that have the same type of infectious agents as tuberculosis?",
        "qid": "481000400_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Sex": "m.06ng1",
            "Tuberculosis": "m.07jwr"
        },
        "s_expression": "(AND medicine.infectious_disease (AND (JOIN (R medicine.transmission_route.infections_that_travel_this_way) m.06ng1) (JOIN medicine.infectious_disease.infectious_agent_type (JOIN medicine.type_of_infectious_agent.diseases m.07jwr))))",
        "actions": [
            "get_relations(m.06ng1)",
            "get_neighbors(m.06ng1,medicine.transmission_route.infections_that_travel_this_way)",
            "get_relations(m.07jwr)",
            "get_neighbors(m.07jwr,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "question": "the same rocket manufacturer who manufactured ares i and saturn-v created what other rocket?",
        "qid": "4300129004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ares I": "m.0dqk5f",
            "saturn-v": "m.07932"
        },
        "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.0dqk5f) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.07932))))",
        "actions": [
            "get_relations(m.0dqk5f)",
            "get_neighbors(m.0dqk5f,spaceflight.rocket.manufacturer)",
            "get_relations(m.07932)",
            "get_neighbors(m.07932,spaceflight.rocket.manufacturer)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0269d32",
                "entity_name": "Saturn-Shuttle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_9dl",
                "entity_name": "Delta IV"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pvlp",
                "entity_name": "Delta III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d8cz_",
                "entity_name": "Saturn INT-21"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fbp58",
                "entity_name": "Saturn INT-20"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026j5q",
                "entity_name": "Delta II"
            }
        ]
    },
    {
        "question": "In what city do most of the people in the place where the Egyptian Mau breed originated?",
        "qid": "WebQTrn-3037_6ca8cba7511811830a04cd64a8a4cf77_cwq",
        "source": "cwq",
        "entities": {
            "Egyptian Mau": "m.0229mb"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN biology.breed_origin.breeds_originating_here m.0229mb)) topic_server.population_number)",
        "actions": [
            "get_relations(m.0229mb)",
            "get_neighbors(m.0229mb,biology.animal_breed.place_of_origin)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "tempus destroyed an item belonging to which character with the ability of soul destruction?",
        "qid": "4302209012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tempus": "m.0bxj80p",
            "soul destruction": "m.0c1rylz"
        },
        "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxj80p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c1rylz)))",
        "actions": [
            "get_relations(m.0bxj80p)",
            "get_neighbors(m.0bxj80p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
            "get_relations(#0)",
            "get_neighbors(#0,fictional_universe.fictional_object.owner)",
            "get_relations(m.0c1rylz)",
            "get_neighbors(m.0c1rylz,fictional_universe.character_powers.characters_with_this_ability)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0b19n",
                "entity_name": "Cime"
            }
        ]
    },
    {
        "question": "which olympic event was officially contested in the 1936 olympics,as well as other olympic games in amesterdam?",
        "qid": "4300161011000_grailqa",
        "source": "grailqa",
        "entities": {
            "amesterdam": "m.0k3p",
            "1936 olympics": "m.09x3r"
        },
        "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0k3p)) (JOIN olympics.olympic_event.olympic_games_contested m.09x3r)))",
        "actions": [
            "get_relations(m.0k3p)",
            "get_neighbors(m.0k3p,olympics.olympic_host_city.olympics_hosted)",
            "get_relations(#0)",
            "get_neighbors(#0,olympics.olympic_games.events)",
            "get_relations(m.09x3r)",
            "get_neighbors(m.09x3r,olympics.olympic_games.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3lm",
                "entity_name": "Women's Discus throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gnx9y",
                "entity_name": "Men's 300m Free Rifle, 3 Positions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cx",
                "entity_name": "Men's \u00c9p\u00e9e individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6sy",
                "entity_name": "Men's Weightlifting, Light Heavyweight 75-82.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2_w",
                "entity_name": "Men's Track cycling, Sprint individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079rjhk",
                "entity_name": "Track Cycling, Men's 1000m Time Trial"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cl",
                "entity_name": "Men's Shot put"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk326",
                "entity_name": "Men's 200m breaststroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pv",
                "entity_name": "Men's Javelin throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hx",
                "entity_name": "Men's 1500m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ngnwg",
                "entity_name": "Men's Boxing, Middleweight 66.7-72.6kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pc",
                "entity_name": "Men's Discus throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk368",
                "entity_name": "Women's High jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9lcn",
                "entity_name": "Women's 3 metre springboard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9ld0",
                "entity_name": "Men's 3 metre springboard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9ld6",
                "entity_name": "Women's 10 metre platform"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk29t",
                "entity_name": "Men's Parallel bars"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2c_",
                "entity_name": "Men's Gymnastics, individual all-round"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2cj",
                "entity_name": "Men's Long jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2dm",
                "entity_name": "Women's Foil individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2f7",
                "entity_name": "Men's 50m pistol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2gh",
                "entity_name": "Eventing, individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hl",
                "entity_name": "Men's Athletics, 100m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2jp",
                "entity_name": "Men's Athletics, 5000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2lq",
                "entity_name": "Men's Foil individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2mz",
                "entity_name": "Men's Marathon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qm",
                "entity_name": "Men's Athletics, 400m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qs",
                "entity_name": "Men's 100m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2rd",
                "entity_name": "Men's Pole vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2sn",
                "entity_name": "Women's 100m backstroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2tl",
                "entity_name": "Men's Athletics, 400m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2tx",
                "entity_name": "Women's 400m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2x7",
                "entity_name": "Men's Pommel horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2xq",
                "entity_name": "Men's Sabre individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2yb",
                "entity_name": "Jumping, individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2yh",
                "entity_name": "Men's Athletics, 200m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2zl",
                "entity_name": "Men's Horizontal bar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk300",
                "entity_name": "Men's Hammer throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30h",
                "entity_name": "Men's Athletics, 110m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30t",
                "entity_name": "Men's 400m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32_",
                "entity_name": "Men's Triple jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32p",
                "entity_name": "Men's High jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk33m",
                "entity_name": "Women's 200m breaststroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk35z",
                "entity_name": "Men's Modern pentathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39d",
                "entity_name": "Men's Vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39q",
                "entity_name": "Women's 100m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39w",
                "entity_name": "Men's Athletics, 10000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3b5",
                "entity_name": "Men's Athletics, 800m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3bh",
                "entity_name": "Men's 100m backstroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3d6",
                "entity_name": "Men's 50m rifle prone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3dj",
                "entity_name": "Men's Decathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3fm",
                "entity_name": "Men's 3000m steeplechase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3kp",
                "entity_name": "Men's Rings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3l9",
                "entity_name": "Men's Single sculls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3n5",
                "entity_name": "Men's Athletics, 1500m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6br",
                "entity_name": "Men's Weightlifting, Middleweight 67.5-75kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6rz",
                "entity_name": "Men's Weightlifting, Lightweight 60-67.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mrmgy",
                "entity_name": "Men's Freestyle Wrestling, Heavyweight +87"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mrmq7",
                "entity_name": "Men's Freestyle Wrestling, Light Heavyweight 79-87kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mvl2f",
                "entity_name": "Men's Weightlifting, Heavyweight +82.5"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9ns",
                "entity_name": "Men's Boxing, Flyweight -50.8kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9p9",
                "entity_name": "Men's Boxing, Featherweight 53.5-57.2kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9pt",
                "entity_name": "Men's Boxing, Welterweight 61.2-66.7kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9qd",
                "entity_name": "Men's Boxing, Light Heavyweight 72.6-79.4kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9r1",
                "entity_name": "Men's Boxing, Heavyweight +79.4kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mxbhd",
                "entity_name": "Men's Freestyle Wrestling, Lightweight 61-66kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n660_",
                "entity_name": "Men's Boxing, Bantamweight 50.8-53.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n661m",
                "entity_name": "Men's boxing, lightweight 57.2-61.2 kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n668v",
                "entity_name": "Men's Freestyle Wrestling, Welterweight 66-72kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n6tlh",
                "entity_name": "Men's Freestyle Wrestling, Middleweight 72-79 kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ngwtp",
                "entity_name": "Men's Weightlifting, featherweight -60"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0k1nqc0",
                "entity_name": "Individual Dressage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2mn",
                "entity_name": "Women's Athletics, 100m"
            }
        ]
    },
    {
        "question": "of tropical cyclones that affected tci, which are in the same category with tropical storm linda?",
        "qid": "4300198002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tropical Storm Linda": "m.0bhbf6b",
            "tci": "m.07fr_"
        },
        "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.0bhbf6b)) (JOIN meteorology.tropical_cyclone.affected_areas m.07fr_)))",
        "actions": [
            "get_relations(m.0bhbf6b)",
            "get_neighbors(m.0bhbf6b,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_relations(m.07fr_)",
            "get_neighbors(m.07fr_,meteorology.cyclone_affected_area.cyclones)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "question": "which breeds have similar temperament as the picardy spaniel and the seppala siberian sleddogs?",
        "qid": "4300795005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Picardy Spaniel": "m.02qx_df",
            "seppala siberian sleddogs": "m.01p08w"
        },
        "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.02qx_df) (JOIN biology.breed_temperament.breeds m.01p08w))))",
        "actions": [
            "get_relations(m.02qx_df)",
            "get_neighbors(m.02qx_df,biology.animal_breed.temperament)",
            "get_relations(m.01p08w)",
            "get_neighbors(m.01p08w,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,biology.breed_temperament.breeds)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4blp",
                "entity_name": "Braque d'Auvergne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f57_",
                "entity_name": "Chinese Crested Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p39m",
                "entity_name": "American Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03htgw",
                "entity_name": "Koolie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ysz",
                "entity_name": "Italian Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05sfy0",
                "entity_name": "L\u00f6wchen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08s0ws",
                "entity_name": "Boykin Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kwdc",
                "entity_name": "German Wirehaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gx1zf",
                "entity_name": "Billy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dhvj7",
                "entity_name": "Kromfohrl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074g8y",
                "entity_name": "Manchester Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h0h0",
                "entity_name": "Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0182yx",
                "entity_name": "Shetland Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.062dgz",
                "entity_name": "Lagotto Romagnolo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121bvrw_",
                "entity_name": "Biewer Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011lh",
                "entity_name": "Azawakh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0183xd",
                "entity_name": "Vizsla"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cx_v",
                "entity_name": "Chesapeake Bay Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01hzb8",
                "entity_name": "Great Pyrenees"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j0x",
                "entity_name": "Basenji"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01kv93",
                "entity_name": "Staffordshire Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p3d7",
                "entity_name": "Alaskan Malamute"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p5rd",
                "entity_name": "Bernese Mountain Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pm38",
                "entity_name": "Clumber Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01s7fj",
                "entity_name": "Shih Tzu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x5q1",
                "entity_name": "J\u00e4mthund"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xtxb",
                "entity_name": "Cavalier King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020z5t",
                "entity_name": "English Springer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025wmcw",
                "entity_name": "Cavapoo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0266ts8",
                "entity_name": "Basset Bleu de Gascogne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02700gv",
                "entity_name": "Ariegeois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0271kpq",
                "entity_name": "Spanish Water Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dtrb",
                "entity_name": "Swedish Lapphund"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_73c",
                "entity_name": "Rat Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cyl6",
                "entity_name": "Maltese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kf24",
                "entity_name": "Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kgrx",
                "entity_name": "Cardigan Welsh Corgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kw9d",
                "entity_name": "German Shorthaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nscg",
                "entity_name": "Bearded Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rfz5",
                "entity_name": "Irish Soft-coated Wheaten Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjrc",
                "entity_name": "Groenendael"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wbf7",
                "entity_name": "Bedlington Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wbgd",
                "entity_name": "English Cocker Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wcn0z",
                "entity_name": "Russian Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.031pqh",
                "entity_name": "Peruvian Hairless Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353h4",
                "entity_name": "Border Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353qr",
                "entity_name": "Dandie Dinmont Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0388_c",
                "entity_name": "Japanese Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.038wt3",
                "entity_name": "French Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.039rzl",
                "entity_name": "Irish Setter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.039s48",
                "entity_name": "Irish Red and White Setter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_7wn",
                "entity_name": "Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_vlr",
                "entity_name": "Smooth Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cq_p",
                "entity_name": "Kerry Blue Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d12",
                "entity_name": "Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fyyd",
                "entity_name": "Shar Pei"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jjm4",
                "entity_name": "Norwich Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l5cy",
                "entity_name": "Spinone Italiano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ydd_",
                "entity_name": "Havanese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0403wp9",
                "entity_name": "Muggin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410k_5",
                "entity_name": "Treeing Tennessee Brindle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dm6",
                "entity_name": "Komondor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gp8k",
                "entity_name": "English Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jj62w",
                "entity_name": "Llewellyn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mgcx",
                "entity_name": "Bench-Legged Feist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nmst",
                "entity_name": "King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04prkf",
                "entity_name": "Small M\u00fcnsterl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04svjlt",
                "entity_name": "American Squirrel Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04svljl",
                "entity_name": "Braque Saint-Germain"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04swl7y",
                "entity_name": "Halden Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04swlxt",
                "entity_name": "Hellenikos Ichnilatis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxcxt",
                "entity_name": "Posavac Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04t5jl6",
                "entity_name": "American Leopard Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.057_4d",
                "entity_name": "Canadian Eskimo Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kz7n",
                "entity_name": "Rajapalayam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05t252",
                "entity_name": "Volpino Italiano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05tbqb",
                "entity_name": "Coton de Tulear"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y236",
                "entity_name": "New Guinea singing dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06h8yy",
                "entity_name": "Dogo Argentino"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0708qt",
                "entity_name": "Artois Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074pqh",
                "entity_name": "Spanish Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773fb",
                "entity_name": "Treeing Walker Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0778jb",
                "entity_name": "Redbone Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07blj0",
                "entity_name": "Large M\u00fcnsterl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07dx0m",
                "entity_name": "Japanese Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07j9bq",
                "entity_name": "Alano Espa\u00f1ol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08626",
                "entity_name": "Whippet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08f_zh",
                "entity_name": "Pont-Audemer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08gl4z",
                "entity_name": "Dutch Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08mgkp",
                "entity_name": "American Staghound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bjrtp",
                "entity_name": "Cirneco dell'Etna"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bllpv",
                "entity_name": "Puggle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bq1jd",
                "entity_name": "Kaikadi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cbgst",
                "entity_name": "Kintamani"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djh8b",
                "entity_name": "Silken Windhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpx6y",
                "entity_name": "German Longhaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f339h",
                "entity_name": "Portuguese Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fgh8v",
                "entity_name": "Cesky Fousek"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fl887",
                "entity_name": "Braque du Bourbonnais"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gt5n2",
                "entity_name": "Cretan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvx7",
                "entity_name": "Pharaoh Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hw_s",
                "entity_name": "Basset Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nr94",
                "entity_name": "Bichon Frise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p3f7",
                "entity_name": "Standard Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p29g",
                "entity_name": "Alapaha Blue Blood Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pyhj",
                "entity_name": "Shiloh Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020dr1",
                "entity_name": "Bluetick coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_s2m",
                "entity_name": "Black Mouth Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025tcp1",
                "entity_name": "Russell Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026qz0j",
                "entity_name": "Polish Hunting Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fvym",
                "entity_name": "Goldendoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fxgn",
                "entity_name": "Cockapoo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kfwr",
                "entity_name": "Poodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktbm",
                "entity_name": "Smooth Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n_s4",
                "entity_name": "Korean Jindo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pp4mc",
                "entity_name": "Bohemian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pxllv",
                "entity_name": "Blue Picardy Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z57c",
                "entity_name": "Cairn Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b6hk",
                "entity_name": "Catalan Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jgg9",
                "entity_name": "Cesky Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0408cgh",
                "entity_name": "Stephens Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044lwh",
                "entity_name": "Irish Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxb0m",
                "entity_name": "Kemmer Stock Hybrid Squirrel Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxbjk",
                "entity_name": "Parnell's Carolina Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05py4h",
                "entity_name": "Old Danish Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06k88g",
                "entity_name": "Hovawart"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07bln6",
                "entity_name": "Curly Coated Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07p7st",
                "entity_name": "Portuguese Podengo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07t_h2",
                "entity_name": "Africanis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07vgwn",
                "entity_name": "Pumi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08c5h8",
                "entity_name": "Brazilian Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09v1cn",
                "entity_name": "Ratonero Bodeguero Andaluz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b26w3",
                "entity_name": "Schnoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b3s8y",
                "entity_name": "Czechoslovakian Wolfdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bq2r1",
                "entity_name": "Indian Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3k58",
                "entity_name": "Pra\u017esk\u00fd Krysa\u0159\u00edk"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cqpth",
                "entity_name": "Hortaya borzaya"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fsg8",
                "entity_name": "Harrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hkfc",
                "entity_name": "Kooikerhondje"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1ct",
                "entity_name": "Wirehaired Pointing Griffon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0blw4s",
                "entity_name": "Huntaway"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wfy",
                "entity_name": "Pomeranian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z404",
                "entity_name": "Newfoundland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027z5xc",
                "entity_name": "Gull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02f1fz",
                "entity_name": "West Highland White Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kdvy",
                "entity_name": "Pyrenean Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02l61f",
                "entity_name": "Rough Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pl0tr",
                "entity_name": "Dorgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ppbk1",
                "entity_name": "American English Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qllrh",
                "entity_name": "Porcelaine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rf9c3",
                "entity_name": "Central Anatolian Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rjc05",
                "entity_name": "Dalmatian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rwwfw",
                "entity_name": "Kyi-Leo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ryncw",
                "entity_name": "Ariege Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjst",
                "entity_name": "Laekenois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xp9c",
                "entity_name": "Miniature Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xlb",
                "entity_name": "Irish Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xv1",
                "entity_name": "Lakeland Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.038wvd",
                "entity_name": "Toy Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03grfxm",
                "entity_name": "Taigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045lcs",
                "entity_name": "Chien Fran\u00e7ais Blanc et Noir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fzvx",
                "entity_name": "Cane Corso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051ppn",
                "entity_name": "Glen of Imaal Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.053_t0",
                "entity_name": "Stabyhoun"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.055br8",
                "entity_name": "Thai Bangkaew Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bkt9",
                "entity_name": "German Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c21l",
                "entity_name": "South Russian Ovcharka"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06m828",
                "entity_name": "Petit Basset Griffon Vend\u00e9en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06w066",
                "entity_name": "English Foxhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08c4cj",
                "entity_name": "Irish Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08pmt0",
                "entity_name": "Alaskan Klee Kai"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08r0rx",
                "entity_name": "Norrbottenspets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dflqz",
                "entity_name": "Blue Lacy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgnzvz",
                "entity_name": "Burgos Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018z4d",
                "entity_name": "Bloodhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p2dp",
                "entity_name": "Affenpinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02bp0t",
                "entity_name": "Pekingese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjtz",
                "entity_name": "Malinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlqx",
                "entity_name": "Basset Fauve de Bretagne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353wm",
                "entity_name": "English Toy Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cr7fw",
                "entity_name": "Morkie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ys4",
                "entity_name": "Ibizan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049jr6",
                "entity_name": "American Pit Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dzzn",
                "entity_name": "Neapolitan Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyhd",
                "entity_name": "Tibetan Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06c5rq",
                "entity_name": "Grand Bleu de Gascogne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081zj5",
                "entity_name": "Welsh Springer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fxnkq",
                "entity_name": "Moscow Watchdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fzb8x",
                "entity_name": "Bracco Italiano"
            }
        ]
    },
    {
        "question": "what is the number of programming language paradigms for euclid and bliss ?",
        "qid": "3205793006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Euclid": "m.03fbrg",
            "BLISS": "m.022l9v"
        },
        "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03fbrg) (JOIN computer.programming_language_paradigm.languages m.022l9v))))",
        "actions": [
            "get_relations(m.03fbrg)",
            "get_neighbors(m.03fbrg,computer.programming_language.language_paradigms)",
            "get_relations(m.022l9v)",
            "get_neighbors(m.022l9v,computer.programming_language.language_paradigms)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "which type of symptoms does the fip and old age diseases have in common?",
        "qid": "246000302_graphquestions",
        "source": "graphquestions",
        "entities": {
            "fip": "m.06_1k9",
            "Old age": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "which unit mass utilises a system of measurement that uses the energy density unit of joule per cubic metre and has a maximum weightmass in kilograms?",
        "qid": "4302823001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Joule per cubic metre": "m.02sj51f"
        },
        "s_expression": "(ARGMAX (AND measurement_unit.mass_unit (JOIN (R measurement_unit.measurement_system.weight_units) (JOIN (R measurement_unit.energy_density_unit.measurement_system) m.02sj51f))) measurement_unit.mass_unit.weightmass_in_kilograms)",
        "actions": [
            "get_relations(m.02sj51f)",
            "get_neighbors(m.02sj51f,measurement_unit.energy_density_unit.measurement_system)",
            "get_relations(#0)",
            "get_neighbors(#0,measurement_unit.measurement_system.weight_units)",
            "get_attributes(#1)",
            "argmax(#1,measurement_unit.mass_unit.weightmass_in_kilograms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ny7",
                "entity_name": "Tonne"
            }
        ]
    },
    {
        "question": "the industry within which the international ladies garment workers union operates has what common parent industry that also is parent to the railway?",
        "qid": "4301917003000_grailqa",
        "source": "grailqa",
        "entities": {
            "international ladies garment workers union": "m.054w78",
            "railway": "m.06d_3"
        },
        "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.06d_3)))",
        "actions": [
            "get_relations(m.054w78)",
            "get_neighbors(m.054w78,business.trade_union.industry)",
            "get_relations(#0)",
            "get_neighbors(#0,business.industry.child_industry)",
            "get_relations(m.06d_3)",
            "get_neighbors(m.06d_3,business.industry.child_industry)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0126b6d7",
                "entity_name": "Ballyclare Limited"
            }
        ]
    },
    {
        "question": "which cheese made from milk of ram has the same texture as black butte does?",
        "qid": "4302129015000_grailqa",
        "source": "grailqa",
        "entities": {
            "ram": "m.07bgp",
            "Black Butte": "m.02h8b_j"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.02h8b_j))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.02h8b_j)",
            "get_neighbors(m.02h8b_j,food.cheese.texture)",
            "get_relations(#1)",
            "get_neighbors(#1,food.cheese_texture.cheeses)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02h89g8",
                "entity_name": "Azeitao"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02h8b66",
                "entity_name": "Beenleigh Blue"
            }
        ]
    },
    {
        "question": "a digital camera that has the color filter array type of bayer and iso settings of 2000 has what sensor type?",
        "qid": "4300861000000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "2000": "m.04l497s"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.04l497s))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.04l497s)",
            "get_neighbors(m.04l497s,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "What attractions can a visitor see if they are visiting the place where the film Eden Court was located?",
        "qid": "WebQTrn-825_498677b7af0b61e338f886059e90f2d7_cwq",
        "source": "cwq",
        "entities": {
            "Eden Court": "m.0cr696l"
        },
        "s_expression": "(JOIN (R travel.travel_destination.tourist_attractions) (AND (JOIN (R location.location.containedby) common.topic) (JOIN film.film_location.featured_in_films m.0cr696l)))",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,location.location.containedby)",
            "get_relations(m.0cr696l)",
            "get_neighbors(m.0cr696l,film.film.featured_film_locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,travel.travel_destination.tourist_attractions)"
        ],
        "answer": [
            {
                "answer_argument": "m.01dlzc",
                "answer_type": "Entity",
                "entity_name": "Adler Planetarium"
            },
            {
                "answer_argument": "m.021czc",
                "answer_type": "Entity",
                "entity_name": "Field Museum of Natural History"
            },
            {
                "answer_argument": "m.025v4fb",
                "answer_type": "Entity",
                "entity_name": "Lincoln Park Zoo"
            },
            {
                "answer_argument": "m.027hqc_",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago"
            },
            {
                "answer_argument": "m.02jw0z",
                "answer_type": "Entity",
                "entity_name": "Shedd Aquarium"
            },
            {
                "answer_argument": "m.02rvwrv",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago Building"
            },
            {
                "answer_argument": "m.05zv09",
                "answer_type": "Entity",
                "entity_name": "Chicago Cultural Center"
            },
            {
                "answer_argument": "m.06_7k",
                "answer_type": "Entity",
                "entity_name": "Willis Tower"
            },
            {
                "answer_argument": "m.0b0sh",
                "answer_type": "Entity",
                "entity_name": "Wrigley Field"
            },
            {
                "answer_argument": "m.0b28z",
                "answer_type": "Entity",
                "entity_name": "John Hancock Center"
            },
            {
                "answer_argument": "m.0bl8mx",
                "answer_type": "Entity",
                "entity_name": "DuSable Museum of African American History"
            },
            {
                "answer_argument": "m.0c7ln",
                "answer_type": "Entity",
                "entity_name": "Navy Pier"
            },
            {
                "answer_argument": "m.0d9wz",
                "answer_type": "Entity",
                "entity_name": "Museum of Science and Industry"
            },
            {
                "answer_argument": "m.0g_8d0",
                "answer_type": "Entity",
                "entity_name": "Cadillac Palace Theatre"
            },
            {
                "answer_argument": "m.0w7m2x9",
                "answer_type": "Entity",
                "entity_name": "Muslim Community Center"
            }
        ]
    },
    {
        "question": "feline infectious peritonitis and some disease caused by old share which symptoms?",
        "qid": "246000001_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Feline infectious peritonitis": "m.06_1k9",
            "old": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "besides paper embossing, what other art forms were made by pierre redon?",
        "qid": "4302283009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Pierre Redon": "m.05c96m6",
            "Paper embossing": "m.020fn9"
        },
        "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.05c96m6) (JOIN visual_art.artwork.art_form m.020fn9))))",
        "actions": [
            "get_relations(m.05c96m6)",
            "get_neighbors(m.05c96m6,visual_art.visual_artist.artworks)",
            "get_relations(m.020fn9)",
            "get_neighbors(m.020fn9,visual_art.visual_art_form.artworks)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,visual_art.artwork.art_form)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ng72",
                "entity_name": "Metalworking"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pkk0",
                "entity_name": "Bas-relief"
            }
        ]
    },
    {
        "question": "how many elements about public affairs programming are made by the producer of communism, u.s. brand?",
        "qid": "4303008012000_grailqa",
        "source": "grailqa",
        "entities": {
            "public affairs programming": "m.026pm0p",
            "Communism, U.S. Brand": "m.05sv4yy"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.026pm0p) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.05sv4yy)))))",
        "actions": [
            "get_relations(m.026pm0p)",
            "get_neighbors(m.026pm0p,broadcast.genre.content)",
            "get_relations(m.05sv4yy)",
            "get_neighbors(m.05sv4yy,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what are the number of religious practices that practice buddhism and krishna consciousness?",
        "qid": "3204573006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Buddhism": "m.092bf5",
            "krishna consciousness": "m.017j3y"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.092bf5) (JOIN (R religion.religion.practices) m.017j3y))))",
        "actions": [
            "get_relations(m.092bf5)",
            "get_neighbors(m.092bf5,religion.religion.practices)",
            "get_relations(m.017j3y)",
            "get_neighbors(m.017j3y,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "find all quotations from tempus that are addressed to whom \"men make their own fates -- it's personal, not a matter for debate\" was addressed to",
        "qid": "4302343001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tempus": "m.0bxj80p",
            "\"Men make their own fates -- it's personal, not a matter for debate\"": "m.0g9qhhd"
        },
        "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxj80p)) (JOIN media_common.quotation_addressee.quotations m.0g9qhhd)))",
        "actions": [
            "get_relations(m.0bxj80p)",
            "get_neighbors(m.0bxj80p,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.addressee)",
            "get_relations(m.0g9qhhd)",
            "get_neighbors(m.0g9qhhd,media_common.quotation.addressee)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg0cq",
                "entity_name": "Straton"
            }
        ]
    },
    {
        "question": "how many other typefaces from microsoft are designed by the same person who designed verdana?",
        "qid": "491000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Verdana": "m.0h56_",
            "Microsoft": "m.04sv4"
        },
        "s_expression": "(COUNT (AND base.typefaces.typeface (AND (JOIN base.typefaces.typeface.typeface_creator (JOIN (R base.typefaces.typeface.typeface_creator) m.0h56_)) (JOIN base.typefaces.typeface.foundry m.04sv4))))",
        "actions": [
            "get_relations(m.0h56_)",
            "get_neighbors(m.0h56_,base.typefaces.typeface.typeface_creator)",
            "get_relations(#0)",
            "get_neighbors(#0,base.typefaces.typeface_creator.typefaces_created)",
            "get_relations(m.04sv4)",
            "get_neighbors(m.04sv4,base.typefaces.typeface_foundry.typefaces)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "the text at the core of c&ma and honored by prayer practitioners is what?",
        "qid": "4300898014000_grailqa",
        "source": "grailqa",
        "entities": {
            "c&ma": "m.03yvh5",
            "Prayer": "m.0687y"
        },
        "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.03yvh5) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0687y))))",
        "actions": [
            "get_relations(m.03yvh5)",
            "get_neighbors(m.03yvh5,religion.religion.texts)",
            "get_relations(m.0687y)",
            "get_neighbors(m.0687y,religion.religious_practice.practice_of)",
            "get_relations(#1)",
            "get_neighbors(#1,religion.religion.texts)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.015j7",
                "entity_name": "The Bible"
            }
        ]
    },
    {
        "question": "Find the artist responsible for Something In Common, what drugs were found in their system at the time of their death?",
        "qid": "WebQTrn-2600_01c839018be55a06350a42544b4d4fd8_cwq",
        "source": "cwq",
        "entities": {
            "Drug overdose": "m.01tf_6",
            "Something in Common": "m.0p58j2"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.featured_artist.recordings m.0p58j2)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
        "actions": [
            "get_relations(m.0p58j2)",
            "get_neighbors(m.0p58j2,music.recording.featured_artists)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.01tf_6)",
            "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02nx6jb",
                "answer_type": "Entity",
                "entity_name": "Cocaine overdose"
            }
        ]
    },
    {
        "question": "Who was influenced by Melanie Klein and in turn influenced Whitman's poetry?",
        "qid": "WebQTrn-3358_5dcd3d0995310bd9bcaea14ff53b887e_cwq",
        "source": "cwq",
        "entities": {
            "whitman": "m.085gk",
            "Melanie Klein": "m.014shr"
        },
        "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.085gk) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.014shr)))",
        "actions": [
            "get_relations(m.085gk)",
            "get_neighbors(m.085gk,influence.influence_node.influenced_by)",
            "get_relations(m.014shr)",
            "get_neighbors(m.014shr,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.039n1",
                "answer_type": "Entity",
                "entity_name": "Georg Wilhelm Friedrich Hegel"
            }
        ]
    },
    {
        "question": "the setting that is used by canon eos 450d and samsung gx-20 has how many camera iso capabilities?",
        "qid": "3205827006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Canon EOS 450D": "m.03m6znn",
            "Samsung GX-20": "m.04wjr5m"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03m6znn) (JOIN (R digicams.digital_camera.iso_setting) m.04wjr5m))))",
        "actions": [
            "get_relations(m.03m6znn)",
            "get_neighbors(m.03m6znn,digicams.digital_camera.iso_setting)",
            "get_relations(m.04wjr5m)",
            "get_neighbors(m.04wjr5m,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "6"
            }
        ]
    },
    {
        "question": "which person designed the imac dv and next computer?",
        "qid": "4301299014000_grailqa",
        "source": "grailqa",
        "entities": {
            "NeXT Computer": "m.04_1mz4",
            "imac dv": "m.02p3xw8"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.02p3xw8)) (JOIN (R computer.computer.key_designers) m.04_1mz4)))",
        "actions": [
            "get_relations(m.02p3xw8)",
            "get_neighbors(m.02p3xw8,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.04_1mz4)",
            "get_neighbors(m.04_1mz4,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3r",
                "entity_name": "Steve Jobs"
            }
        ]
    },
    {
        "question": "which type of dish common in manado cuisine contains sugars?",
        "qid": "4301356000000_grailqa",
        "source": "grailqa",
        "entities": {
            "sugars": "m.06x4c",
            "Manado cuisine": "m.0102k5v9"
        },
        "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.06x4c) (JOIN (R dining.cuisine.dishes) m.0102k5v9))))",
        "actions": [
            "get_relations(m.06x4c)",
            "get_neighbors(m.06x4c,food.ingredient.dishes)",
            "get_relations(m.0102k5v9)",
            "get_neighbors(m.0102k5v9,dining.cuisine.dishes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,food.dish.type_of_dish1)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0318f4",
                "entity_name": "Main course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gtdm",
                "entity_name": "Condiment"
            }
        ]
    },
    {
        "question": "what category of schools does london business school and the publisher of opus fall under?",
        "qid": "4301751002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Opus": "m.02x6y16",
            "London Business School": "m.02kzfw"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.02x6y16)) (JOIN (R education.educational_institution.school_type) m.02kzfw)))",
        "actions": [
            "get_relations(m.02x6y16)",
            "get_neighbors(m.02x6y16,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.02kzfw)",
            "get_neighbors(m.02kzfw,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jxkf",
                "entity_name": "Public university"
            }
        ]
    },
    {
        "question": "what programming language paradigm is followed by programming languages such as angelscript and derivatives of prolog?",
        "qid": "4300417003000_grailqa",
        "source": "grailqa",
        "entities": {
            "AngelScript": "m.0vsgr58",
            "Prolog": "m.05vpz"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.05vpz)) (JOIN (R computer.programming_language.language_paradigms) m.0vsgr58)))",
        "actions": [
            "get_relations(m.05vpz)",
            "get_neighbors(m.05vpz,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.0vsgr58)",
            "get_neighbors(m.0vsgr58,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            }
        ]
    },
    {
        "question": "Birth place to Ant\u00c3\u00a3o Martins Homem, what type of government did Sparta Greece have?",
        "qid": "WebQTrn-1542_89e002ff7250ffeee9ef6f385a7a0658_cwq",
        "source": "cwq",
        "entities": {
            "Sparta": "m.09472",
            "ant\u00e3\u00a3o martins homem": "g.122wbmv4"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.122wbmv4)))",
        "actions": [
            "get_relations(m.09472)",
            "get_neighbors(m.09472,location.country.form_of_government)",
            "get_relations(g.122wbmv4)",
            "get_neighbors(g.122wbmv4,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.04szc",
                "answer_type": "Entity",
                "entity_name": "Monarchy"
            }
        ]
    },
    {
        "question": "In Virginia and locations near the Venice Municipal Airport, what time zone do they use?",
        "qid": "WebQTrn-3099_623b8370871966e2e8aeb301482e1558_cwq",
        "source": "cwq",
        "entities": {
            "Virginia": "m.07z1m",
            "Venice Municipal Airport": "m.026w2y7"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07z1m) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.026w2y7)))",
        "actions": [
            "get_relations(m.07z1m)",
            "get_neighbors(m.07z1m,location.location.time_zones)",
            "get_relations(m.026w2y7)",
            "get_neighbors(m.026w2y7,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ]
    },
    {
        "question": "When did the team with a mascot named Fred first win a trophy?",
        "qid": "WebQTrn-1018_707caa73f11b1e655a0f5f6b75082734_cwq",
        "source": "cwq",
        "entities": {
            "fred": "m.02nsyh9"
        },
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.02nsyh9)) time.event.end_date)",
        "actions": [
            "get_relations(m.02nsyh9)",
            "get_neighbors(m.02nsyh9,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmin(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04gk9y8",
                "answer_type": "Entity",
                "entity_name": "1976\u201377 FA Cup"
            }
        ]
    },
    {
        "question": "bigger than life: the boundless genius of yiddish theater has how many exhibition subjects?",
        "qid": "4302933004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Bigger than Life: The Boundless Genius of Yiddish Theater": "m.04ky4zp"
        },
        "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04ky4zp)))))",
        "actions": [
            "get_relations(m.04ky4zp)",
            "get_neighbors(m.04ky4zp,exhibitions.exhibition.exhibition_types)",
            "get_relations(#0)",
            "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
            "get_relations(#1)",
            "get_neighbors(#1,exhibitions.exhibition.subjects)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "41"
            }
        ]
    },
    {
        "question": "how many games of electronic arts are released in the united states?",
        "qid": "444000402_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "united states": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "When is the most recent time the sports team whose fight song is \"Meet the Mets\" won the World Series?",
        "qid": "WebQTest-1556_e4e4fb403bd2ceb5f9d9414dd63e7b64_cwq",
        "source": "cwq",
        "entities": {
            "Meet the Mets": "m.0bqwsw"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.0bqwsw)) time.event.end_date)",
        "actions": [
            "get_relations(m.0bqwsw)",
            "get_neighbors(m.0bqwsw,sports.fight_song.sports_team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q9lc",
                "answer_type": "Entity",
                "entity_name": "1986 World Series"
            }
        ]
    },
    {
        "question": "what is the political ideology that the national unity front and the queensland state election, 1977 follow?",
        "qid": "4302370004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Queensland state election, 1977": "m.025_983",
            "National Unity Front": "m.0cc4np"
        },
        "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.025_983)) (JOIN (R government.political_party.ideology) m.0cc4np)))",
        "actions": [
            "get_relations(m.025_983)",
            "get_neighbors(m.025_983,government.parliamentary_election.government_formed_by)",
            "get_relations(#0)",
            "get_neighbors(#0,government.political_party.ideology)",
            "get_relations(m.0cc4np)",
            "get_neighbors(m.0cc4np,government.political_party.ideology)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yqp",
                "entity_name": "Conservatism"
            }
        ]
    },
    {
        "question": "what number of children of eddard stark were born in winterfell?",
        "qid": "448000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Eddard Stark": "m.03qs0n1",
            "Winterfell": "m.04sstyx"
        },
        "s_expression": "(COUNT (AND fictional_universe.fictional_character (AND (JOIN (R fictional_universe.fictional_character.children) m.03qs0n1) (JOIN fictional_universe.fictional_character.place_of_birth m.04sstyx))))",
        "actions": [
            "get_relations(m.03qs0n1)",
            "get_neighbors(m.03qs0n1,fictional_universe.fictional_character.children)",
            "get_relations(m.04sstyx)",
            "get_neighbors(m.04sstyx,fictional_universe.fictional_setting.fictional_characters_born_here)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "What was the last championship won by the team coached by Tom Thiboeau?",
        "qid": "WebQTrn-3707_d0d5f9f0ae25465e1efba1abf9a39089_cwq",
        "source": "cwq",
        "entities": {
            "tom thiboeau": "m.043jv80"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.043jv80)) time.event.start_date)",
        "actions": [
            "get_relations(m.043jv80)",
            "get_neighbors(m.043jv80,basketball.basketball_coach.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04zt01",
                "answer_type": "Entity",
                "entity_name": "1998 NBA Finals"
            }
        ]
    },
    {
        "question": "When was the last time the basketball team whose head coach is Derek Fisher won the national championship?",
        "qid": "WebQTest-998_47e95c73ec76579a8d66b6e1607df389_cwq",
        "source": "cwq",
        "entities": {
            "Derek Fisher": "m.04lvwk"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.04lvwk)) time.event.start_date)",
        "actions": [
            "get_relations(m.04lvwk)",
            "get_neighbors(m.04lvwk,basketball.basketball_coach.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0cs1kg"
            }
        ]
    },
    {
        "question": "the computer designer for iphone4 and iphone 5 was whom?",
        "qid": "4301299011000_grailqa",
        "source": "grailqa",
        "entities": {
            "iPhone 5": "m.0gg4gh4",
            "iphone4": "m.0c0bg9c"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.0c0bg9c)) (JOIN (R computer.computer.key_designers) m.0gg4gh4)))",
        "actions": [
            "get_relations(m.0c0bg9c)",
            "get_neighbors(m.0c0bg9c,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.0gg4gh4)",
            "get_neighbors(m.0gg4gh4,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cw6w",
                "entity_name": "Jonathan Ive"
            }
        ]
    },
    {
        "question": "what content does new york public radio and the producer of lost & found sound produce?",
        "qid": "4300832004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lost & Found Sound": "m.05v7hrt",
            "new york public radio": "m.01_3by"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.05v7hrt)) (JOIN broadcast.content.producer m.01_3by)))",
        "actions": [
            "get_relations(m.05v7hrt)",
            "get_neighbors(m.05v7hrt,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.01_3by)",
            "get_neighbors(m.01_3by,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05v8dc3",
                "entity_name": "The Sonic Memorial Project"
            }
        ]
    },
    {
        "question": "what other rocket did the manufacturer of saturn int-21 and delta 2 create?",
        "qid": "4300129011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Saturn INT-21": "m.0d8cz_",
            "delta 2": "m.026j5q"
        },
        "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.0d8cz_) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.026j5q))))",
        "actions": [
            "get_relations(m.0d8cz_)",
            "get_neighbors(m.0d8cz_,spaceflight.rocket.manufacturer)",
            "get_relations(m.026j5q)",
            "get_neighbors(m.026j5q,spaceflight.rocket.manufacturer)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0269d32",
                "entity_name": "Saturn-Shuttle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_9dl",
                "entity_name": "Delta IV"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pvlp",
                "entity_name": "Delta III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dqk5f",
                "entity_name": "Ares I"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fbp58",
                "entity_name": "Saturn INT-20"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07932",
                "entity_name": "Saturn V"
            }
        ]
    },
    {
        "question": "which neoplasm treatments come with the side effects of facial redness?",
        "qid": "4301182001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Neoplasm": "m.07p3l",
            "Facial Redness": "m.07t7mr3"
        },
        "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.07t7mr3)) (JOIN medicine.medical_treatment.used_to_treat m.07p3l)))",
        "actions": [
            "get_relations(m.07t7mr3)",
            "get_neighbors(m.07t7mr3,medicine.symptom.includes_symptoms)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.symptom.side_effect_of)",
            "get_relations(m.07p3l)",
            "get_neighbors(m.07p3l,medicine.disease.treatments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02m3m3",
                "entity_name": "Prednisone"
            }
        ]
    },
    {
        "question": "which rocket function can be found on the saturn v as well as on another rocket made by chrysler group llc?",
        "qid": "242000100_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Chrysler Group LLC": "m.01_bp",
            "Saturn V": "m.07932"
        },
        "s_expression": "(AND spaceflight.rocket_function (AND (JOIN spaceflight.rocket_function.rockets_supporting_this_function (JOIN (R spaceflight.rocket_manufacturer.rockets_manufactured) m.01_bp)) (JOIN (R spaceflight.rocket.rocket_function) m.07932)))",
        "actions": [
            "get_relations(m.01_bp)",
            "get_neighbors(m.01_bp,spaceflight.rocket_manufacturer.rockets_manufactured)",
            "get_relations(#0)",
            "get_neighbors(#0,spaceflight.rocket.rocket_function)",
            "get_relations(m.07932)",
            "get_neighbors(m.07932,spaceflight.rocket.rocket_function)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cspd",
                "entity_name": "Low Earth orbit"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rkwz",
                "entity_name": "Launch vehicle"
            }
        ]
    },
    {
        "question": "who discovered o as well as an element in the d-block?",
        "qid": "480000001_graphquestions",
        "source": "graphquestions",
        "entities": {
            "d-block": "m.0j7pr",
            "o": "m.025s6bf"
        },
        "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.periodic_table_block.elements) m.0j7pr)) (JOIN chemistry.element_discoverer.discovered m.025s6bf)))",
        "actions": [
            "get_relations(m.0j7pr)",
            "get_neighbors(m.0j7pr,chemistry.periodic_table_block.elements)",
            "get_relations(#0)",
            "get_neighbors(#0,chemistry.chemical_element.discoverer)",
            "get_relations(m.025s6bf)",
            "get_neighbors(m.025s6bf,chemistry.chemical_element.discoverer)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ]
    },
    {
        "question": "In what year did a team win the superbowl and the 2013 AFC Championship Game ?",
        "qid": "WebQTest-837_c4e06c3a9e4b4f10bd1ae97f1742c198_cwq",
        "source": "cwq",
        "entities": {
            "Superbowl": "m.06x5s",
            "2013 AFC Championship Game": "m.0_gtz8t"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0_gtz8t)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.0_gtz8t)",
            "get_neighbors(m.0_gtz8t,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv"
            },
            {
                "answer_argument": "m.076yq"
            }
        ]
    },
    {
        "question": "which is the number of automotive classes which are examples of ford freestar and kia sedona?",
        "qid": "3206121012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ford Freestar": "m.0224xp",
            "kia sedona": "m.05pfy5"
        },
        "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.0224xp) (JOIN automotive.automotive_class.examples m.05pfy5))))",
        "actions": [
            "get_relations(m.0224xp)",
            "get_neighbors(m.0224xp,automotive.model.automotive_class)",
            "get_relations(m.05pfy5)",
            "get_neighbors(m.05pfy5,automotive.model.automotive_class)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what social sciences discipline does mcclelland conduct research in?",
        "qid": "4302233000000_grailqa",
        "source": "grailqa",
        "entities": {
            "social sciences": "m.06n6p",
            "mcclelland": "m.018pq1"
        },
        "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.06n6p) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.018pq1))))",
        "actions": [
            "get_relations(m.06n6p)",
            "get_neighbors(m.06n6p,education.field_of_study.subdisciplines)",
            "get_relations(m.018pq1)",
            "get_neighbors(m.018pq1,education.academic.research_areas)",
            "get_relations(#1)",
            "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.046d3s",
                "entity_name": "Development studies"
            }
        ]
    },
    {
        "question": "When was the last time the team that won the 1973 NBA Finals championship won a championship?",
        "qid": "WebQTrn-1406_920d8cef50c023e0a693d393bf609007_cwq",
        "source": "cwq",
        "entities": {
            "1973 NBA Finals": "m.0cs1kg"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0cs1kg)) time.event.start_date)",
        "actions": [
            "get_relations(m.0cs1kg)",
            "get_neighbors(m.0cs1kg,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0cs1kg",
                "answer_type": "Entity",
                "entity_name": "1973 NBA Finals"
            }
        ]
    },
    {
        "question": "how many different breeds from great britain have the same temperament as the otterhound?",
        "qid": "4303460007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Otterhound": "m.05717m",
            "Great Britain": "m.034cm"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.034cm)) (JOIN (R biology.animal_breed.temperament) m.05717m))))",
        "actions": [
            "get_relations(m.034cm)",
            "get_neighbors(m.034cm,biology.breed_origin.breeds_originating_here)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.05717m)",
            "get_neighbors(m.05717m,biology.animal_breed.temperament)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "a digital camera that has the color filter array type of bayer and iso settings of 12800 has what sensor type?",
        "qid": "4300861009000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "12800": "m.04sy2g0"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.04sy2g0))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.04sy2g0)",
            "get_neighbors(m.04sy2g0,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "Wehn did the team with the mascot named Benny the Bull last win the championship?",
        "qid": "WebQTrn-3707_ebbb01712f3eb1443b2895961ec14272_cwq",
        "source": "cwq",
        "entities": {
            "Benny the Bull": "m.067z_k"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.067z_k)) time.event.start_date)",
        "actions": [
            "get_relations(m.067z_k)",
            "get_neighbors(m.067z_k,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04zt01",
                "answer_type": "Entity",
                "entity_name": "1998 NBA Finals"
            }
        ]
    },
    {
        "question": "what category of schools do emmaus high school and the publisher of the chattahoochee review fall under?",
        "qid": "4301751015000_grailqa",
        "source": "grailqa",
        "entities": {
            "The Chattahoochee Review": "m.05f5qnj",
            "Emmaus High School": "m.0cmm22"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.05f5qnj)) (JOIN (R education.educational_institution.school_type) m.0cmm22)))",
        "actions": [
            "get_relations(m.05f5qnj)",
            "get_neighbors(m.05f5qnj,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.0cmm22)",
            "get_neighbors(m.0cmm22,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02dk5q",
                "entity_name": "State school"
            }
        ]
    },
    {
        "question": "what is the number of active websites owned by vivek rp?",
        "qid": "3206340003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "Vivek Rp": "m.0gj5q3j"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.0gj5q3j))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.0gj5q3j)",
            "get_neighbors(m.0gj5q3j,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "When did the sports team whose arena is Old Trafford first win a trophy?",
        "qid": "WebQTrn-1018_593632bf477d73bb33a311728d6e6f29_cwq",
        "source": "cwq",
        "entities": {
            "Old Trafford": "m.030lpl"
        },
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.030lpl)) time.event.end_date)",
        "actions": [
            "get_relations(m.030lpl)",
            "get_neighbors(m.030lpl,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmin(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04gk9y8",
                "answer_type": "Entity",
                "entity_name": "1976\u201377 FA Cup"
            }
        ]
    },
    {
        "question": "how many contents about tv were produced by the producer of on the media?",
        "qid": "4303008015000_grailqa",
        "source": "grailqa",
        "entities": {
            "TV": "m.03bty3x",
            "On The Media": "m.03d53lc"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.03bty3x) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.03d53lc)))))",
        "actions": [
            "get_relations(m.03bty3x)",
            "get_neighbors(m.03bty3x,broadcast.genre.content)",
            "get_relations(m.03d53lc)",
            "get_neighbors(m.03d53lc,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "who was the computer designer for atari 520 stm and atari 260 st?",
        "qid": "4301299001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Atari 260 ST": "m.02h87b6",
            "Atari 520 STm": "m.02h879n"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.02h879n)) (JOIN (R computer.computer.key_designers) m.02h87b6)))",
        "actions": [
            "get_relations(m.02h879n)",
            "get_neighbors(m.02h879n,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.02h87b6)",
            "get_neighbors(m.02h87b6,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0xwj",
                "entity_name": "Atari"
            }
        ]
    },
    {
        "question": "what camera storage type is supported by olympus d-580 zoom and the digital camera with iso setting of 80?",
        "qid": "4302372007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Olympus D-580 Zoom": "g.1jdmgz_rm",
            "80": "m.0220vx9"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.0220vx9)) (JOIN (R digicams.digital_camera.supported_storage_types) g.1jdmgz_rm)))",
        "actions": [
            "get_relations(m.0220vx9)",
            "get_neighbors(m.0220vx9,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(g.1jdmgz_rm)",
            "get_neighbors(g.1jdmgz_rm,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zmtt",
                "entity_name": "xD-Picture Card"
            }
        ]
    },
    {
        "question": "ralph dix and the producer of wake up kentucky produce what content?",
        "qid": "4300832001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Wake Up Kentucky": "m.0zg08kw",
            "Ralph Dix": "m.06jj0pb"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.0zg08kw)) (JOIN broadcast.content.producer m.06jj0pb)))",
        "actions": [
            "get_relations(m.0zg08kw)",
            "get_neighbors(m.0zg08kw,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.06jj0pb)",
            "get_neighbors(m.06jj0pb,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05v2gz6",
                "entity_name": "Down and Outside: On the Streets of Louisville"
            }
        ]
    },
    {
        "question": "What stadium does the champion of the 1931 World Series Championship play at?",
        "qid": "WebQTrn-2444_8fb3f377318c9e61f47779b2c188167b_cwq",
        "source": "cwq",
        "entities": {
            "1931 World Series": "m.04tfzf"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.04tfzf)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.04tfzf)",
            "get_neighbors(m.04tfzf,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "what is the subject of the quote no woman marries for money; they are all clever enough, before marrying a millionaire, to fall in love with him first. which was spoken quoted by the angel of remembrance?",
        "qid": "4300443005000_grailqa",
        "source": "grailqa",
        "entities": {
            "No woman marries for money; they are all clever enough, before marrying a millionaire, to fall in love with him first.": "m.048kl1w",
            "Angel of Remembrance": "m.0h3grm9"
        },
        "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048kl1w)))",
        "actions": [
            "get_relations(m.0h3grm9)",
            "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.subjects)",
            "get_relations(m.048kl1w)",
            "get_neighbors(m.048kl1w,media_common.quotation.subjects)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.048knlz",
                "entity_name": "Love"
            }
        ]
    },
    {
        "question": "where in massachussetts institute of technology does lee young-hee work?",
        "qid": "4301362014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lee Young-hee": "m.0z8dv3z",
            "massachussetts institute of technology": "m.04rwx"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0z8dv3z)) (JOIN (R education.university.departments) m.04rwx)))",
        "actions": [
            "get_relations(m.0z8dv3z)",
            "get_neighbors(m.0z8dv3z,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.04rwx)",
            "get_neighbors(m.04rwx,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fyy3y",
                "entity_name": "MIT Physics Department"
            }
        ]
    },
    {
        "question": "there is a specific cheese with a crumbly texture that is sourced from goat and ovine, what is it called?",
        "qid": "4301155006000_grailqa",
        "source": "grailqa",
        "entities": {
            "ovine": "m.07bgp",
            "Goat": "m.03fwl",
            "Crumbly": "m.02wlqk0"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN food.cheese.texture m.02wlqk0))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.03fwl)",
            "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
            "get_relations(m.02wlqk0)",
            "get_neighbors(m.02wlqk0,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cl7d5",
                "entity_name": "Castelmagno cheese"
            }
        ]
    },
    {
        "question": "what programming language paradigm is used by hy and another programming language influenced by lfe?",
        "qid": "4300798014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hy": "m.011smwfp",
            "LFE": "m.0_82v0s"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.011smwfp) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.0_82v0s))))",
        "actions": [
            "get_relations(m.011smwfp)",
            "get_neighbors(m.011smwfp,computer.programming_language.language_paradigms)",
            "get_relations(m.0_82v0s)",
            "get_neighbors(m.0_82v0s,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "which amusement ride is the fastest of all the ones designed by the person who designed the mansion ride?",
        "qid": "482000201_graphquestions",
        "source": "graphquestions",
        "entities": {
            "mansion": "m.01p79p"
        },
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "actions": [
            "get_relations(m.01p79p)",
            "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
            "get_relations(#0)",
            "get_neighbors(#0,amusement_parks.ride_designer.rides)",
            "get_attributes(#1)",
            "argmax(#1,amusement_parks.ride.max_speed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "question": "what kind of content do the producer of wait wait... don't tell me and american radio works produce?",
        "qid": "4300832007000_grailqa",
        "source": "grailqa",
        "entities": {
            "wait wait... don't tell me": "m.041z1gp",
            "american radio works": "m.03n18r"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.041z1gp)) (JOIN broadcast.content.producer m.03n18r)))",
        "actions": [
            "get_relations(m.041z1gp)",
            "get_neighbors(m.041z1gp,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.03n18r)",
            "get_neighbors(m.03n18r,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bty83",
                "entity_name": "APM: Weekend America"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03btxkg",
                "entity_name": "APM: American RadioWorks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bty93",
                "entity_name": "APM: Word for Word"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bty9_",
                "entity_name": "APM: Garrison Keillor's The Writer's Almanac"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d6d9s",
                "entity_name": "APM: Future Tense"
            }
        ]
    },
    {
        "question": "which character lives in the fictional bandaran island chain of the sacred band of stepsons universe?",
        "qid": "4300742007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Bandaran island chain": "m.0d4qny9",
            "The Sacred Band of Stepsons universe": "m.0ch8hcq"
        },
        "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0d4qny9) (JOIN (R fictional_universe.fictional_universe.locations) m.0ch8hcq))))",
        "actions": [
            "get_relations(m.0d4qny9)",
            "get_neighbors(m.0d4qny9,fictional_universe.type_of_fictional_setting.settings)",
            "get_relations(m.0ch8hcq)",
            "get_neighbors(m.0ch8hcq,fictional_universe.fictional_universe.locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxw253",
                "entity_name": "Cyrus, shape-changer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cvc9fk",
                "entity_name": "Sturm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxj80p",
                "entity_name": "Tempus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg08q",
                "entity_name": "Randal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxtyd0",
                "entity_name": "Roxane, Nisibisi witch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg05_",
                "entity_name": "Niko"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxtt5p",
                "entity_name": "Askelon of Meridian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxttn0",
                "entity_name": "Jihan, Froth Daughter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cms8kp",
                "entity_name": "Kouras"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg093",
                "entity_name": "Arton"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3vjqr",
                "entity_name": "Nino"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0mpkv",
                "entity_name": "Stormbringer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3w0tt",
                "entity_name": "Bandaran adepts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cvc9f6",
                "entity_name": "Levitas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b_k83w",
                "entity_name": "Tabet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck6018",
                "entity_name": "Jamad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0bpb_",
                "entity_name": "Shamshi, Stepson"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck601y",
                "entity_name": "Macon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgdw91",
                "entity_name": "Nameless adepts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck601h",
                "entity_name": "King Genos"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dwxf_",
                "entity_name": "Seth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck601q",
                "entity_name": "Crevis"
            }
        ]
    },
    {
        "question": "Which Children's book about Friendship did Suzanne Collins write?",
        "qid": "WebQTrn-3364_e5faa8b095f56c4563da9331fe2661c2_cwq",
        "source": "cwq",
        "entities": {
            "Suzanne Collins": "m.0bpd5z",
            "Children's literature": "m.0dwly",
            "Friendship": "m.019_nn"
        },
        "s_expression": "(AND (JOIN (R book.author.works_written) m.0bpd5z) (AND (JOIN book.book.genre m.0dwly) (JOIN book.written_work.subjects m.019_nn)))",
        "actions": [
            "get_relations(m.0bpd5z)",
            "get_neighbors(m.0bpd5z,book.author.works_written)",
            "get_relations(m.0dwly)",
            "get_neighbors(m.0dwly,media_common.literary_genre.books_in_this_genre)",
            "get_relations(m.019_nn)",
            "get_neighbors(m.019_nn,book.book_subject.works)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_argument": "m.0dsx8l",
                "answer_type": "Entity",
                "entity_name": "Gregor and the Prophecy of Bane"
            }
        ]
    },
    {
        "question": "which artwork on wood was painted in the era of juan de arellano?",
        "qid": "4301655015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Juan de Arellano": "m.026z4yz",
            "Wood": "m.083vt"
        },
        "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.026z4yz)) (JOIN visual_art.artwork.support m.083vt)))",
        "actions": [
            "get_relations(m.026z4yz)",
            "get_neighbors(m.026z4yz,visual_art.visual_artist.associated_periods_or_movements)",
            "get_relations(#0)",
            "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
            "get_relations(m.083vt)",
            "get_neighbors(m.083vt,visual_art.visual_art_support.artworks)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bfng5d",
                "entity_name": "The Flayed Ox"
            }
        ]
    },
    {
        "question": "what is the political ideology that the people's monarchist party and the queensland state election, 1977 follow?",
        "qid": "4302370003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Queensland state election, 1977": "m.025_983",
            "People's Monarchist Party": "m.069gcq"
        },
        "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.025_983)) (JOIN (R government.political_party.ideology) m.069gcq)))",
        "actions": [
            "get_relations(m.025_983)",
            "get_neighbors(m.025_983,government.parliamentary_election.government_formed_by)",
            "get_relations(#0)",
            "get_neighbors(#0,government.political_party.ideology)",
            "get_relations(m.069gcq)",
            "get_neighbors(m.069gcq,government.political_party.ideology)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yqp",
                "entity_name": "Conservatism"
            }
        ]
    },
    {
        "question": "which programming language paradigm does php3 and java script follow?",
        "qid": "4300417007000_grailqa",
        "source": "grailqa",
        "entities": {
            "php3": "m.060kv",
            "java script": "m.02p97"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.02p97)) (JOIN (R computer.programming_language.language_paradigms) m.060kv)))",
        "actions": [
            "get_relations(m.02p97)",
            "get_neighbors(m.02p97,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.060kv)",
            "get_neighbors(m.060kv,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01c3bz",
                "entity_name": "Imperative programming"
            }
        ]
    },
    {
        "question": "for ned stark's children, how many of them were born in winterfell?",
        "qid": "448000501_graphquestions",
        "source": "graphquestions",
        "entities": {
            "ned stark": "m.03qs0n1",
            "Winterfell": "m.04sstyx"
        },
        "s_expression": "(COUNT (AND fictional_universe.fictional_character (AND (JOIN (R fictional_universe.fictional_character.children) m.03qs0n1) (JOIN fictional_universe.fictional_character.place_of_birth m.04sstyx))))",
        "actions": [
            "get_relations(m.03qs0n1)",
            "get_neighbors(m.03qs0n1,fictional_universe.fictional_character.children)",
            "get_relations(m.04sstyx)",
            "get_neighbors(m.04sstyx,fictional_universe.fictional_setting.fictional_characters_born_here)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "face the music and apple records were both produced by whom?",
        "qid": "4301847006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Face the Music": "m.031hssh",
            "Apple Records": "m.019n_t"
        },
        "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.019n_t)) (JOIN (R music.release.producers) m.031hssh)))",
        "actions": [
            "get_relations(m.019n_t)",
            "get_neighbors(m.019n_t,music.record_label.releases)",
            "get_relations(#0)",
            "get_neighbors(#0,music.release.producers)",
            "get_relations(m.031hssh)",
            "get_neighbors(m.031hssh,music.release.producers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0473q",
                "entity_name": "Jeff Lynne"
            }
        ]
    },
    {
        "question": "what programming language paradigm do programming laguages such as livescript and derivatives of lisp follow?",
        "qid": "4300417000000_grailqa",
        "source": "grailqa",
        "entities": {
            "LiveScript": "m.0_l9rcz",
            "Lisp": "m.04kyw"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04kyw)) (JOIN (R computer.programming_language.language_paradigms) m.0_l9rcz)))",
        "actions": [
            "get_relations(m.04kyw)",
            "get_neighbors(m.04kyw,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.0_l9rcz)",
            "get_neighbors(m.0_l9rcz,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "which website that belongs to the category of lokl.com has web api of python?",
        "qid": "4300801007000_grailqa",
        "source": "grailqa",
        "entities": {
            "lokl.com": "m.05lq6cx",
            "Python": "m.05z1_"
        },
        "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.05lq6cx)) (JOIN internet.website.api m.05z1_)))",
        "actions": [
            "get_relations(m.05lq6cx)",
            "get_neighbors(m.05lq6cx,internet.website.category)",
            "get_relations(#0)",
            "get_neighbors(#0,internet.website_category.sites)",
            "get_relations(m.05z1_)",
            "get_neighbors(m.05z1_,internet.api.site)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gd48j",
                "entity_name": "StopFinder"
            }
        ]
    },
    {
        "question": "In which timezone is Texas, and near, Tulsa International Airport?",
        "qid": "WebQTrn-1563_72ce675be82a5655a30547169d8008e9_cwq",
        "source": "cwq",
        "entities": {
            "Texas": "m.07b_l",
            "Tulsa International Airport": "m.01qgx3"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01qgx3)))",
        "actions": [
            "get_relations(m.07b_l)",
            "get_neighbors(m.07b_l,location.location.time_zones)",
            "get_relations(m.01qgx3)",
            "get_neighbors(m.01qgx3,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02fqwt",
                "answer_type": "Entity",
                "entity_name": "Central Time Zone"
            }
        ]
    },
    {
        "question": "japanese whisky blend single malt with grain whisky have how many types?",
        "qid": "4302561005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Grain whisky": "m.041j_x",
            "Japanese whisky": "m.0bqwqs",
            "single malt": "m.01k5lq"
        },
        "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.041j_x) (AND (JOIN distilled_spirits.blended_spirit.style m.0bqwqs) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01k5lq)))))",
        "actions": [
            "get_relations(m.041j_x)",
            "get_neighbors(m.041j_x,distilled_spirits.distilled_spirit_type.blends)",
            "get_relations(m.0bqwqs)",
            "get_neighbors(m.0bqwqs,distilled_spirits.blended_spirit_style.blends)",
            "get_relations(m.01k5lq)",
            "get_neighbors(m.01k5lq,distilled_spirits.distilled_spirit_type.blends)",
            "intersection(#1,#2)",
            "intersection(#0,#3)",
            "count(#4)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "who made the discovery of both the o and some halogen element?",
        "qid": "485000201_graphquestions",
        "source": "graphquestions",
        "entities": {
            "o": "m.025s6bf",
            "Halogen": "m.03gcp"
        },
        "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.chemical_series.elements) m.03gcp)) (JOIN (R chemistry.chemical_element.discoverer) m.025s6bf)))",
        "actions": [
            "get_relations(m.03gcp)",
            "get_neighbors(m.03gcp,chemistry.chemical_series.elements)",
            "get_relations(#0)",
            "get_neighbors(#0,chemistry.chemical_element.discoverer)",
            "get_relations(m.025s6bf)",
            "get_neighbors(m.025s6bf,chemistry.chemical_element.discoverer)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ]
    },
    {
        "question": "The Bahamas was where Emanuel Lasker was born, but what type of government do they have?",
        "qid": "WebQTrn-1245_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Bahamas": "m.0160w",
            "Emanuel Lasker": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0160w) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.0160w)",
            "get_neighbors(m.0160w,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "the culex tarsalis transmits how many infectious diseases?",
        "qid": "4303160007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Culex tarsalis": "m.0gfmf55"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.0gfmf55)))))",
        "actions": [
            "get_relations(m.0gfmf55)",
            "get_neighbors(m.0gfmf55,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "30"
            }
        ]
    },
    {
        "question": "what isos are currently supported by d40x cameras from unknown?",
        "qid": "4304013004000_grailqa",
        "source": "grailqa",
        "entities": {
            "d40x": "m.02pv_hy",
            "Unknown": "m.01xrf_0"
        },
        "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.02pv_hy) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.01xrf_0))))",
        "actions": [
            "get_relations(m.02pv_hy)",
            "get_neighbors(m.02pv_hy,digicams.digital_camera.iso_setting)",
            "get_relations(m.01xrf_0)",
            "get_neighbors(m.01xrf_0,digicams.camera_sensor_manufacturer.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.iso_setting)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_x",
                "entity_name": "100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_7",
                "entity_name": "Auto"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_g",
                "entity_name": "400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_p",
                "entity_name": "200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg51",
                "entity_name": "1600"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg58",
                "entity_name": "800"
            }
        ]
    },
    {
        "question": "what are the number of religious practices that practice hinduism and taoism?",
        "qid": "3204573003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hinduism": "m.03j6c",
            "Taoism": "m.07gvx"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.03j6c) (JOIN (R religion.religion.practices) m.07gvx))))",
        "actions": [
            "get_relations(m.03j6c)",
            "get_neighbors(m.03j6c,religion.religion.practices)",
            "get_relations(m.07gvx)",
            "get_neighbors(m.07gvx,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "What kind of guitar is played by the lyracist who wrote Second Hand News?",
        "qid": "WebQTrn-3122_2b191a52aba771c6c8ea676fadf7b51e_cwq",
        "source": "cwq",
        "entities": {
            "Guitar": "m.0342h",
            "Second Hand News": "m.0bb7st6"
        },
        "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.lyricist.lyrics_written m.0bb7st6)) (JOIN music.instrument.family m.0342h))",
        "actions": [
            "get_relations(m.0bb7st6)",
            "get_neighbors(m.0bb7st6,music.composition.lyricist)",
            "get_relations(#0)",
            "get_neighbors(#0,music.group_member.instruments_played)",
            "get_relations(m.0342h)",
            "get_neighbors(m.0342h,music.instrument.variation)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.018vs",
                "answer_type": "Entity",
                "entity_name": "Bass guitar"
            }
        ]
    },
    {
        "question": "In what stadium does the team who is owned by William DeWitt, Jr. play?",
        "qid": "WebQTrn-2444_e5059ff268415917df330817b9c8ef8c_cwq",
        "source": "cwq",
        "entities": {
            "William DeWitt, Jr.": "m.05qblx"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.professional_sports_team.owner_s m.05qblx)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.05qblx)",
            "get_neighbors(m.05qblx,sports.sports_team_owner.teams_owned)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "What is the name of the Facebook founder that was influenced by Jeff Bezos?",
        "qid": "WebQTrn-1071_6ee3bfab441c52883f7bde45cbcb4612_cwq",
        "source": "cwq",
        "entities": {
            "facebook": "m.0hmyfsv",
            "Jeff Bezos": "m.011z69"
        },
        "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.011z69)))",
        "actions": [
            "get_relations(m.0hmyfsv)",
            "get_neighbors(m.0hmyfsv,organization.organization.founders)",
            "get_relations(m.011z69)",
            "get_neighbors(m.011z69,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.086dny",
                "answer_type": "Entity",
                "entity_name": "Mark Zuckerberg"
            }
        ]
    },
    {
        "question": "hersbrucker and chinook use how many beer styles?",
        "qid": "3202749007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hersbrucker": "m.0115gwl7",
            "Chinook": "m.0115gh_g"
        },
        "s_expression": "(COUNT (AND base.lightweight.beer_style (AND (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115gwl7) (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115gh_g))))",
        "actions": [
            "get_relations(m.0115gwl7)",
            "get_neighbors(m.0115gwl7,base.lightweight.beer_hop.beer_styles_used_in)",
            "get_relations(m.0115gh_g)",
            "get_neighbors(m.0115gh_g,base.lightweight.beer_hop.beer_styles_used_in)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "where is the version developed by first star software and distributed through virtual console released?",
        "qid": "4301141025000_grailqa",
        "source": "grailqa",
        "entities": {
            "Virtual Console": "m.07sg3j",
            "First Star Software": "m.02pzfw"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pzfw))))",
        "actions": [
            "get_relations(m.07sg3j)",
            "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.02pzfw)",
            "get_neighbors(m.02pzfw,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09c7w0",
                "entity_name": "United States of America"
            }
        ]
    },
    {
        "question": "there exists a musical release produced by angel in my heart and labelled virgin records, what is it?",
        "qid": "4301990013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Angel in My Heart": "m.0mw22q",
            "Virgin Records": "m.0n85g"
        },
        "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0mw22q)) (JOIN music.release.label m.0n85g)))",
        "actions": [
            "get_relations(m.0mw22q)",
            "get_neighbors(m.0mw22q,music.recording.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,music.producer.releases_produced)",
            "get_relations(m.0n85g)",
            "get_neighbors(m.0n85g,music.record_label.releases)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01kf2vl",
                "entity_name": "Northern Star"
            }
        ]
    },
    {
        "question": "in united states of america how many games published by electronic arts are available?",
        "qid": "444000100_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "United States of America": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "Where is the Busch Stadium arena?",
        "qid": "WebQTrn-2444_f3c80ccd9895d93f017cd1f0d310d378_cwq",
        "source": "cwq",
        "entities": {
            "Busch Stadium": "m.06k1v5"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.06k1v5)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.06k1v5)",
            "get_neighbors(m.06k1v5,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "Which suprbowls were won by an NFL team that played in the New York Metropolitan area?",
        "qid": "WebQTrn-3290_a15467d9386227fe2f79084c647b588b_cwq",
        "source": "cwq",
        "entities": {
            "suprbowls": "m.06x5s",
            "New York metropolitan area": "m.01t12z"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.location m.01t12z)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.01t12z)",
            "get_neighbors(m.01t12z,sports.sports_team_location.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.043t_rh",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVI"
            },
            {
                "answer_argument": "m.04myq1",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLII"
            },
            {
                "answer_argument": "m.076sw",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXI"
            },
            {
                "answer_argument": "m.076v7",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXV"
            }
        ]
    }
]
