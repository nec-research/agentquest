import time

import paramiko
from pydantic import Field

from .base_tool import BaseTool


def wait_for_message(shell):
    out = str(shell.recv(9999).decode())
    last_line = ""
    while True:
        last_line = out.split("\n")[-1]
        if ("@" in last_line and ("$" in last_line or "#" in last_line)) or (
            "bash" in last_line and ("$" in last_line or "#" in last_line)
        ):
            break
        time.sleep(0.5)
        out = out + str(shell.recv(9999).decode())
    return out


class SSHConnect(BaseTool):
    """Start an SSH session into the target machine"""

    ssh_ipaddr: str = Field(..., description="Remote server", title="ssh_ipaddr")
    ssh_username: str = Field(..., title="ssh_username")
    ssh_password: str = Field(..., title="ssh_password")

    def _open_kali_tunnel(self, ssh_kali):
        ssh_kali_transport = ssh_kali.get_transport()
        local_listen_addr = ("127.0.0.1", 2222)
        remote_addr = (self.ssh_ipaddr, 22)
        ssh_kali_channel = ssh_kali_transport.open_channel(
            "direct-tcpip", remote_addr, local_listen_addr
        )
        return ssh_kali_channel

    def _connect_to_remote(self, ssh_kali, port=22):
        # Set-up the Kali Tunnel
        tunnel = self._open_kali_tunnel(ssh_kali)
        # Connect remotely
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        try:
            ssh.connect(
                self.ssh_ipaddr,
                username=self.ssh_username,
                password=self.ssh_password,
                port=port,
                sock=tunnel,
            )
            ssh = ssh.invoke_shell()
            msg = wait_for_message(ssh)
        except Exception as error:
            msg = str(error)

        return ssh, msg

    def run(self, ssh_kali):
        return self._connect_to_remote(ssh_kali)
